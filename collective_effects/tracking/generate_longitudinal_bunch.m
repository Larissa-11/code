function [tau, espread] = generate_longitudinal_bunch(bunch, ring, wake)

% To generate the longitudinal bunch, we use the longitudinal potential
% defined in the input
tau = bunch.tau;
pot = bunch.potential;

% Plus the potential well generated by the wake:
wakeF = zeros(1,length(tau));
if wake.long.sim && isfield(wake.long,'wake')
    wakeF = ring.rev_time*bunch.I_b * interp1(wake.long.tau,wake.long.wake,tau,'linear',0);
end
if wake.long.sim && isfield(wake.long,'wr')
    wr = wake.long.wr;
    Rs = wake.long.Rs;
    Q  = wake.long.Q;
    
    Ql = sqrt(Q.^2 - 1/4);
    wrl = wr .* Ql ./ Q;
    
    for ii=1:length(wr)
        phasor = exp(tau*(1i*wrl(ii)+wr(ii)/(2*Q(ii))));
        wakeF = wakeF - wr(ii)*Rs(ii)/Q(ii)*(real(phasor) + 1/(2*Ql)*imag(phasor));
    end
    ind = tau > 0;
    wakeF(ind) = 0;
    ind = tau == 0;
    wakeF(ind) = wakeF(ind)/2;
    wakeF = wakeF * ring.rev_time*bunch.I_b;
end

idist = zeros(size(pot));

% Now we iterate to get the equilibrium distribution
espread = bunch.espread;
converged = false;
while ~converged
    Totalpot = pot;
    figure; axes; hold('all');
    
    distr_old = get_distribution_from_potential(tau, Totalpot, ring, espread);
    
    residue_old = trapz(tau,distr_old.^2);
    while ~converged
        %Include the potential well from wake:
        Totalpot = pot + conv(distr_old,wakeF,'same');
        
        % Integrate the potential to get the potential well
        distr = get_distribution_from_potential(tau, Totalpot, ring, espread);
        
        residue = trapz(tau,(distr-distr_old).^2);
        if residue < residue_old
            distr_old = distr;
            residue_old = residue;
            if residue < 1e-6
                converged = true;
            end
        else
            espread = espread*1.02;
            break;
        end
    end
end

idist(1) = 0;
% and integrate it:
for ii=2:length(distr),
    idist(ii) = idist(ii-1) + (distr(ii)+distr(ii-1))/2*(tau(ii)-tau(ii-1));
end
idist = idist/idist(end);

% At last, use the integrated longitudinal distribution to generate
% particles with longitudinal position which follows the equilibrium
% distribution
ind = idist==max(idist) | idist==min(idist);
tau = interp1(idist(~ind),tau(~ind),rand(1,bunch.num_part));


function distr = get_distribution_from_potential(tau, pot, ring, espread)
    
    ipot = zeros(size(pot));

    % Integrate the potential to get the potential well
    ipot(1) = 0;
    for ii=2:length(pot),
        ipot(ii) = ipot(ii-1) + (pot(ii)+pot(ii-1))/2*(tau(ii)-tau(ii-1));
    end
    [~,ind] = min(ipot);
    ipot = ipot - ipot(ind);
    
    % Using the potential well, get the distribution function
    distr = exp(-1/(ring.mom_comp*ring.rev_time*ring.E)*(ipot/(2*espread^2)));
    distr = distr/trapz(distr);
    
    plot(tau,ipot);