# -*- coding: utf-8 -*-

from parameter import Parameter
from definitions import ParameterDefinitions as Prms

label = 'Storage ring'

parameter_list = [
        
  Parameter(
    name     = 'Storage ring number of beam position monitors',
    group    = 'FAC',
    value    = Prms.si_number_of_beam_position_monitors,
    symbol   = r'<math>N_\text{BPM}</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring number of horizontal slow dipole correctors',
    group    = 'FAC',
    value    = Prms.si_number_of_horizontal_slow_dipole_correctors,
    symbol   = r'<math>N^\text{slow}_\text{HCM}</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring number of vertical slow dipole correctors',
    group    = 'FAC',
    value    = Prms.si_number_of_vertical_slow_dipole_correctors,
    symbol   = r'<math>N^\text{slow}_\text{VCM}</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                      
  Parameter(
    name     = 'Storage ring number of horizontal fast dipole correctors',
    group    = 'FAC',
    value    = Prms.si_number_of_horizontal_fast_dipole_correctors,
    symbol   = r'<math>N^\text{fast}_\text{HCM}</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring number of vertical fast dipole correctors',
    group    = 'FAC',
    value    = Prms.si_number_of_vertical_fast_dipole_correctors,
    symbol   = r'<math>N^\text{fast}_\text{VCM}</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring number of skew correctors',
    group    = 'FAC',
    value    = Prms.si_number_of_skew_correctors,
    symbol   = r'<math>N_\text{skew}</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),
     
  Parameter(
    name     = 'Storage ring horizontal slow dipole corrector maximum strength',
    group    = 'FAC',
    value    = Prms.si_horizontal_slow_dipole_corrector_maximum_strength,
    symbol   = r'<math>\theta^\text{slow}_\text{x, max}</math>',
    units    = unicode('μrad', encoding='utf-8'),
    deps     = [],
    obs      = [],
  ), 
    
  Parameter(
    name     = 'Storage ring vertical slow dipole corrector maximum strength',
    group    = 'FAC',
    value    = Prms.si_vertical_slow_dipole_corrector_maximum_strength,
    symbol   = r'<math>\theta^\text{slow}_\text{y, max}</math>',
    units    = unicode('μrad', encoding='utf-8'),
    deps     = [],
    obs      = [],
  ), 
                  
  Parameter(
    name     = 'Storage ring horizontal fast dipole corrector maximum strength',
    group    = 'FAC',
    value    = Prms.si_horizontal_fast_dipole_corrector_maximum_strength,
    symbol   = r'<math>\theta^\text{fast}_\text{x, max}</math>',
    units    = unicode('μrad', encoding='utf-8'),
    deps     = [],
    obs      = [],
  ), 
    
  Parameter(
    name     = 'Storage ring vertical fast dipole corrector maximum strength',
    group    = 'FAC',
    value    = Prms.si_vertical_fast_dipole_corrector_maximum_strength,
    symbol   = r'<math>\theta^\text{fast}_\text{y, max}</math>',
    units    = unicode('μrad', encoding='utf-8'),
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring skew corrector maximum integrated strength',
    group    = 'FAC',
    value    = Prms.si_skew_corrector_maximum_integrated_strength,
    symbol   = r'<math>\theta^\text{fast}_\text{y, max}</math>',
    units    = 'm<sup>-1</sup>',
    deps     = [],
    obs      = [],
  ),

                  
  Parameter(
    name     = 'Storage ring dipole power supplies ripple error tolerance',
    group    = 'FAC',
    value    = Prms.si_dipole_power_supplies_ripple_error_tolerance,
    symbol   = r'<math>E_\text{ripp, DIP}</math>',
    units    = 'ppm',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring quadrupole power supplies ripple error tolerance',
    group    = 'FAC',
    value    = Prms.si_quadrupole_power_supplies_ripple_error_tolerance,
    symbol   = r'<math>E_\text{ripp, QUAD}</math>',
    units    = 'ppm',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring sextupole power supplies ripple error tolerance',
    group    = 'FAC',
    value    = Prms.si_sextupole_power_supplies_ripple_error_tolerance,
    symbol   = r'<math>E_\text{ripp, SEXT}</math>',
    units    = 'ppm',
    deps     = [],
    obs      = [],
  ),
          
  Parameter(
    name     = 'Storage ring dipoles vibration amplitude error tolerance',
    group    = 'FAC',
    value    = Prms.si_dipoles_vibration_amplitude_error_tolerance,
    symbol   = r'<math>E_\text{vib, DIP}</math>',
    units    = 'nm',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring quadrupoles vibration amplitude error tolerance',
    group    = 'FAC',
    value    = Prms.si_quadrupoles_vibration_amplitude_error_tolerance,
    symbol   = r'<math>E_\text{vib, QUAD}</math>',
    units    = 'nm',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring sextupoles vibration amplitude error tolerance',
    group    = 'FAC',
    value    = Prms.si_sextupoles_vibration_amplitude_error_tolerance,
    symbol   = r'<math>E_\text{vib, SEXT}</math>',
    units    = 'nm',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device SCW4T name',
    group    = 'GIA',
    value    = Prms.si_insertion_device_scw4t_name,
    symbol   = r'',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device SCW4T type',
    group    = 'GIA',
    value    = Prms.si_insertion_device_scw4t_type,
    symbol   = r'',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device SCW4T period length',
    group    = 'GIA',
    value    = Prms.si_insertion_device_scw4t_period,
    symbol   = r'<math>\lambda_\text{SCW4T}</math>',
    units    = 'mm',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device SCW4T number of periods',
    group    = 'GIA',
    value    = Prms.si_insertion_device_scw4t_number_of_periods,
    symbol   = r'<math>N_\text{p, SCW4T}</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device SCW4T length',
    group    = 'GIA',
    value    = Prms.si_insertion_device_scw4t_length,
    symbol   = r'<math>L_\text{p, SCW4T}</math>',
    units    = 'cm',
    deps     = [],
    obs      = [],
  ),  
  
  Parameter(
    name     = 'Storage ring insertion device SCW4T minimum gap',
    group    = 'GIA',
    value    = Prms.si_insertion_device_scw4t_minimum_gap,
    symbol   = r'<math>G_\text{min, SCW4T}</math>',
    units    = 'mm',
    deps     = [],
    obs      = [],
  ),              
       
  Parameter(
    name     = 'Storage ring insertion device SCW4T maximum horizontal field',
    group    = 'GIA',
    value    = Prms.si_insertion_device_scw4t_maximum_horizontal_field,
    symbol   = r'<math>B_\text{x, SCW4T}</math>',
    units    = 'T',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device SCW4T maximum vertical field',
    group    = 'GIA',
    value    = Prms.si_insertion_device_scw4t_maximum_vertical_field,
    symbol   = r'<math>B_\text{y, SCW4T}</math>',
    units    = 'T',
    deps     = [],
    obs      = [],
  ),
    
  Parameter(
    name     = 'Storage ring insertion device SCW4T maximum horizontal deflection parameter',
    group    = 'GIA',
    value    = Prms.si_insertion_device_scw4t_maximum_horizontal_deflection_parameter,
    symbol   = r'<math>K_\text{x, SCW4T}</math>',
    units    = '',
    deps     = ['Storage ring insertion device SCW4T period length', 'Storage ring insertion device SCW4T maximum vertical field'],
    obs      = [r'<math>K_\text{x, SCW4T} = \frac{ec B_\text{y,SCW4T} \lambda_\text{p, SCW4T}}{2 \pi E_0}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device SCW4T maximum vertical deflection parameter',
    group    = 'GIA',
    value    = Prms.si_insertion_device_scw4t_maximum_vertical_deflection_parameter,
    symbol   = r'<math>K_\text{y, SCW4T}</math>',
    units    = '',
    deps     = ['Storage ring insertion device SCW4T period length', 'Storage ring insertion device SCW4T maximum horizontal field'],
    obs      = [r'<math>K_\text{y, SCW4T} = \frac{ec B_\text{x,SCW4T} \lambda_\text{p, SCW4T}}{2 \pi E_0}</math>'],
  ),
    
  Parameter(
    name     = 'Storage ring insertion device SCW4T maximum power',
    group    = 'GIA',
    value    = Prms.si_insertion_device_scw4t_maximum_power,
    symbol   = r'<math>P_\text{SCW4T}</math>',
    units    = 'kW',
    deps     = ['Storage ring beam energy', 'Storage ring beam current', 'Storage ring insertion device SCW4T period length', 'Storage ring insertion device SCW4T number of periods', 'Storage ring insertion device SCW4T maximum horizontal deflection parameter'],
    obs      = [r'<math>P_\text{SCW4T} = \frac{4 \pi^2 r_e}{3 e E_0} \frac{E^2 K^2_\text{x,SCW4T} N_\text{p, SCW4T} I}{\lambda_\text{p, SCW4T}}</math>'],
  ), 
                    
  Parameter(
    name     = 'Storage ring insertion device EPU80 name',
    group    = 'GIA',
    value    = Prms.si_insertion_device_epu80_name,
    symbol   = r'',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device EPU80 type',
    group    = 'GIA',
    value    = Prms.si_insertion_device_epu80_type,
    symbol   = r'',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device EPU80 period length',
    group    = 'GIA',
    value    = Prms.si_insertion_device_epu80_period,
    symbol   = r'<math>\lambda_\text{EPU80}</math>',
    units    = 'mm',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device EPU80 number of periods',
    group    = 'GIA',
    value    = Prms.si_insertion_device_epu80_number_of_periods,
    symbol   = r'<math>N_\text{p, EPU80}</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device EPU80 length',
    group    = 'GIA',
    value    = Prms.si_insertion_device_epu80_length,
    symbol   = r'<math>L_\text{p, EPU80}</math>',
    units    = 'cm',
    deps     = [],
    obs      = [],
  ),  
  
  Parameter(
    name     = 'Storage ring insertion device EPU80 minimum gap',
    group    = 'GIA',
    value    = Prms.si_insertion_device_epu80_minimum_gap,
    symbol   = r'<math>G_\text{min, EPU80}</math>',
    units    = 'mm',
    deps     = [],
    obs      = [],
  ),              
       
  Parameter(
    name     = 'Storage ring insertion device EPU80 maximum horizontal field',
    group    = 'GIA',
    value    = Prms.si_insertion_device_epu80_maximum_horizontal_field,
    symbol   = r'<math>B_\text{x, EPU80}</math>',
    units    = 'T',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device EPU80 maximum vertical field',
    group    = 'GIA',
    value    = Prms.si_insertion_device_epu80_maximum_vertical_field,
    symbol   = r'<math>B_\text{y, EPU80}</math>',
    units    = 'T',
    deps     = [],
    obs      = [],
  ),
    
  Parameter(
    name     = 'Storage ring insertion device EPU80 maximum horizontal deflection parameter',
    group    = 'GIA',
    value    = Prms.si_insertion_device_epu80_maximum_horizontal_deflection_parameter,
    symbol   = r'<math>K_\text{x, EPU80}</math>',
    units    = '',
    deps     = ['Storage ring insertion device EPU80 period length', 'Storage ring insertion device EPU80 maximum vertical field'],
    obs      = [r'<math>K_\text{x, EPU80} = \frac{ec B_\text{y,EPU80} \lambda_\text{p, EPU80}}{2 \pi E_0}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device EPU80 maximum vertical deflection parameter',
    group    = 'GIA',
    value    = Prms.si_insertion_device_epu80_maximum_vertical_deflection_parameter,
    symbol   = r'<math>K_\text{y, EPU80}</math>',
    units    = '',
    deps     = ['Storage ring insertion device EPU80 period length', 'Storage ring insertion device EPU80 maximum horizontal field'],
    obs      = [r'<math>K_\text{y, EPU80} = \frac{ec B_\text{x,EPU80} \lambda_\text{p, EPU80}}{2 \pi E_0}</math>'],
  ),
    
  Parameter(
    name     = 'Storage ring insertion device EPU80 maximum power',
    group    = 'GIA',
    value    = Prms.si_insertion_device_epu80_maximum_power,
    symbol   = r'<math>P_\text{EPU80}</math>',
    units    = 'kW',
    deps     = ['Storage ring beam energy', 'Storage ring beam current', 'Storage ring insertion device EPU80 period length', 'Storage ring insertion device EPU80 number of periods', 'Storage ring insertion device EPU80 maximum horizontal deflection parameter'],
    obs      = [r'<math>P_\text{EPU80} = \frac{4 \pi^2 r_e}{3 e E_0} \frac{E^2 K^2_\text{x,EPU80} N_\text{p, EPU80} I}{\lambda_\text{p, EPU80}}</math>'],
  ), 
        
  Parameter(
    name     = 'Storage ring insertion device IVU25 name',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu25_name,
    symbol   = r'',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device IVU25 type',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu25_type,
    symbol   = r'',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device IVU25 period length',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu25_period,
    symbol   = r'<math>\lambda_\text{IVU25}</math>',
    units    = 'mm',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device IVU25 number of periods',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu25_number_of_periods,
    symbol   = r'<math>N_\text{p, IVU25}</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device IVU25 length',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu25_length,
    symbol   = r'<math>L_\text{p, IVU25}</math>',
    units    = 'cm',
    deps     = [],
    obs      = [],
  ),  
  
  Parameter(
    name     = 'Storage ring insertion device IVU25 minimum gap',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu25_minimum_gap,
    symbol   = r'<math>G_\text{min, IVU25}</math>',
    units    = 'mm',
    deps     = [],
    obs      = [],
  ),              
       
  Parameter(
    name     = 'Storage ring insertion device IVU25 maximum horizontal field',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu25_maximum_horizontal_field,
    symbol   = r'<math>B_\text{x, IVU25}</math>',
    units    = 'T',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device IVU25 maximum vertical field',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu25_maximum_vertical_field,
    symbol   = r'<math>B_\text{y, IVU25}</math>',
    units    = 'T',
    deps     = [],
    obs      = [],
  ),
    
  Parameter(
    name     = 'Storage ring insertion device IVU25 maximum horizontal deflection parameter',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu25_maximum_horizontal_deflection_parameter,
    symbol   = r'<math>K_\text{x, IVU25}</math>',
    units    = '',
    deps     = ['Storage ring insertion device IVU25 period length', 'Storage ring insertion device IVU25 maximum vertical field'],
    obs      = [r'<math>K_\text{x, IVU25} = \frac{ec B_\text{y,IVU25} \lambda_\text{p, IVU25}}{2 \pi E_0}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device IVU25 maximum vertical deflection parameter',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu25_maximum_vertical_deflection_parameter,
    symbol   = r'<math>K_\text{y, IVU25}</math>',
    units    = '',
    deps     = ['Storage ring insertion device IVU25 period length', 'Storage ring insertion device IVU25 maximum horizontal field'],
    obs      = [r'<math>K_\text{y, IVU25} = \frac{ec B_\text{x,IVU25} \lambda_\text{p, IVU25}}{2 \pi E_0}</math>'],
  ),
    
  Parameter(
    name     = 'Storage ring insertion device IVU25 maximum power',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu25_maximum_power,
    symbol   = r'<math>P_\text{IVU25}</math>',
    units    = 'kW',
    deps     = ['Storage ring beam energy', 'Storage ring beam current', 'Storage ring insertion device IVU25 period length', 'Storage ring insertion device IVU25 number of periods', 'Storage ring insertion device IVU25 maximum horizontal deflection parameter'],
    obs      = [r'<math>P_\text{IVU25} = \frac{4 \pi^2 r_e}{3 e E_0} \frac{E^2 K^2_\text{x,IVU25} N_\text{p, IVU25} I}{\lambda_\text{p, IVU25}}</math>'],
  ), 
                  
  Parameter(
    name     = 'Storage ring insertion device IVU19 name',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu19_name,
    symbol   = r'',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device IVU19 type',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu19_type,
    symbol   = r'',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device IVU19 period length',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu19_period,
    symbol   = r'<math>\lambda_\text{IVU19}</math>',
    units    = 'mm',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device IVU19 number of periods',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu19_number_of_periods,
    symbol   = r'<math>N_\text{p, IVU19}</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device IVU19 length',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu19_length,
    symbol   = r'<math>L_\text{p, IVU19}</math>',
    units    = 'cm',
    deps     = [],
    obs      = [],
  ),  
  
  Parameter(
    name     = 'Storage ring insertion device IVU19 minimum gap',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu19_minimum_gap,
    symbol   = r'<math>G_\text{min, IVU19}</math>',
    units    = 'mm',
    deps     = [],
    obs      = [],
  ),              
       
  Parameter(
    name     = 'Storage ring insertion device IVU19 maximum horizontal field',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu19_maximum_horizontal_field,
    symbol   = r'<math>B_\text{x, IVU19}</math>',
    units    = 'T',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device IVU19 maximum vertical field',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu19_maximum_vertical_field,
    symbol   = r'<math>B_\text{y, IVU19}</math>',
    units    = 'T',
    deps     = [],
    obs      = [],
  ),
    
  Parameter(
    name     = 'Storage ring insertion device IVU19 maximum horizontal deflection parameter',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu19_maximum_horizontal_deflection_parameter,
    symbol   = r'<math>K_\text{x, IVU19}</math>',
    units    = '',
    deps     = ['Storage ring insertion device IVU19 period length', 'Storage ring insertion device IVU19 maximum vertical field'],
    obs      = [r'<math>K_\text{x, IVU19} = \frac{ec B_\text{y,IVU19} \lambda_\text{p, IVU19}}{2 \pi E_0}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring insertion device IVU19 maximum vertical deflection parameter',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu19_maximum_vertical_deflection_parameter,
    symbol   = r'<math>K_\text{y, IVU19}</math>',
    units    = '',
    deps     = ['Storage ring insertion device IVU19 period length', 'Storage ring insertion device IVU19 maximum horizontal field'],
    obs      = [r'<math>K_\text{y, IVU19} = \frac{ec B_\text{x,IVU19} \lambda_\text{p, IVU19}}{2 \pi E_0}</math>'],
  ),
    
  Parameter(
    name     = 'Storage ring insertion device IVU19 maximum power',
    group    = 'GIA',
    value    = Prms.si_insertion_device_ivu19_maximum_power,
    symbol   = r'<math>P_\text{IVU19}</math>',
    units    = 'kW',
    deps     = ['Storage ring beam energy', 'Storage ring beam current', 'Storage ring insertion device IVU19 period length', 'Storage ring insertion device IVU19 number of periods', 'Storage ring insertion device IVU19 maximum horizontal deflection parameter'],
    obs      = [r'<math>P_\text{IVU19} = \frac{4 \pi^2 r_e}{3 e E_0} \frac{E^2 K^2_\text{x,IVU19} N_\text{p, IVU19} I}{\lambda_\text{p, IVU19}}</math>'],
  ),    
                  
  Parameter(
    name     = 'Storage ring beam energy',
    group    = 'GIA',
    value    = Prms.si_beam_energy,
    symbol   = r'<math>E</math>',
    units    = 'GeV',
    deps     = [],
    obs      = [],
  ),

  Parameter(
    name     = 'Storage ring beam gamma factor',
    group    = 'FAC',
    value    = Prms.si_beam_gamma_factor,
    symbol   = r'<math>\gamma</math>',
    units    = '',
    deps     = ['Storage ring beam energy'],
    obs      = [],
  ),

  Parameter(
    name     = 'Storage ring beam beta factor',
    group    = 'FAC',
    value    = Prms.si_beam_beta_factor,
    symbol   = r'<math>\beta</math>',
    units    = '',
    deps     = ['Storage ring beam gamma factor'],
    obs      = [],
  ),

  Parameter(
    name     = 'Storage ring beam velocity',
    group    = 'FAC',
    value    = Prms.si_beam_velocity,
    symbol   = r'<math>v</math>',
    units    = 'm/s',
    deps     = ['Storage ring beam beta factor'],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring beam magnetic rigidity',
    group    = 'FAC',
    value    = Prms.si_beam_magnetic_rigidity,
    symbol   = r'<math>(B\rho)</math>',
    units    = unicode('T·m', encoding='utf-8'),
    deps     = ['Storage ring beam energy'],
    obs      = [r'<math>(B\rho) = \frac{p}{ec} = \frac{E}{ec^2}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring beam current',
    group    = 'FAC',
    value    = Prms.si_beam_current,
    symbol   = r'<math>I</math>',
    units    = 'mA',
    deps     = [],
    obs      = [],
  ),

  Parameter(
    name     = 'Storage ring lattice version',
    group    = 'FAC',
    value    = Prms.si_lattice_version,
    symbol   = '',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring lattice type',
    group    = 'FAC',
    value    = Prms.si_lattice_type,
    symbol   = '',
    units    = '',
    deps     = ['Storage ring lattice version'],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring lattice circumference',
    group    = 'GIA',
    value    = Prms.si_lattice_circumference,
    symbol   = r'<math>C</math>',
    units    = 'm',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring lattice symmetry',
    group    = 'FAC',
    value    = Prms.si_lattice_symmetry,
    symbol   = r'<math>N_\text{SUPERCELLS}</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),
      
  Parameter(
    name     = 'Storage ring number of long straight sections',
    group    = 'FAC',
    value    = Prms.si_number_of_long_straight_sections ,
    symbol   = r'<math>N_\text{lss}</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring number of short straight sections',
    group    = 'FAC',
    value    = Prms.si_number_of_short_straight_sections ,
    symbol   = r'<math>N_\text{sss}</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),            
  Parameter(
    name     = 'Storage ring length of long straight sections',
    group    = 'FAC',
    value    = Prms.si_length_of_long_straight_sections ,
    symbol   = r'<math>L_\text{lss}</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring length of short straight sections',
    group    = 'FAC',
    value    = Prms.si_length_of_short_straight_sections ,
    symbol   = r'<math>L_\text{sss}</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring harmonic number',
    group    = 'FAC',
    value    = Prms.si_harmonic_number,
    symbol   = r'<math>h</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                                                   
  Parameter(
    name     = 'Storage ring RF cavity peak voltage',
    group    = 'FAC',
    value    = Prms.si_rf_cavity_peak_voltage,
    symbol   = r'<math>V_\text{RF}</math>',
    units    = 'MV',
    deps     = [],
    obs      = [],
  ),
  
  Parameter(
    name     = 'Storage ring revolution period',
    group    = 'FAC',
    value    = Prms.si_revolution_period,
    symbol   = r'<math>T_\text{rev}</math>',
    units    = unicode('μs',encoding='utf-8'),
    deps     = ['Storage ring lattice circumference',
                'Storage ring beam velocity'],
    obs      = [],
  ),
 
  Parameter(
    name     = 'Storage ring revolution frequency',
    group    = 'FAC',
    value    = Prms.si_revolution_frequency,
    symbol   = r'<math>f_\text{rev}</math>',
    units    = 'MHz',
    deps     = ['Storage ring revolution period'],
    obs      = [],
  ),

  Parameter(
    name     = 'Storage ring RF frequency',
    group    = 'FAC',
    value    = Prms.si_rf_frequency,
    symbol   = r'<math>f_\text{RF}</math>',
    units    = 'MHz',
    deps     = ['Storage ring revolution frequency',
                'Storage ring harmonic number'],
    obs      = [],
  ),

  Parameter(
    name     = 'Storage ring number of electrons',
    group    = 'FAC',
    value    = Prms.si_number_of_electrons,
    symbol   = r'<math>N</math>',
    units    = '',
    deps     = ['Storage ring beam current',
                'Storage ring revolution period'],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring number of B1 dipoles',
    group    = 'FAC',
    value    = Prms.si_number_of_B1_dipoles,
    symbol   = r'<math>N_\text{B1}</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),
            
  Parameter(
    name     = 'Storage ring number of B2 dipoles',
    group    = 'FAC',
    value    = Prms.si_number_of_B2_dipoles,
    symbol   = r'<math>N_\text{B2}</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring number of B3 dipoles',
    group    = 'FAC',
    value    = Prms.si_number_of_B3_dipoles,
    symbol   = r'<math>N_\text{B3}</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),
         
  Parameter(
    name     = 'Storage ring number of BC dipoles',
    group    = 'FAC',
    value    = Prms.si_number_of_BC_dipoles,
    symbol   = r'<math>N_\text{BC}</math>',
    units    = '',
    deps     = [],
    obs      = [],
  ),
                           
  Parameter(
    name     = 'Storage ring hardedge length of B1 dipoles',
    group    = 'FAC',
    value    = Prms.si_hardedge_length_of_B1_dipoles,
    symbol   = r'<math>L_\text{B1}</math>',
    units    = 'm',
    deps     = [],
    obs      = [],
  ),
                
  Parameter(
    name     = 'Storage ring hardedge length of B2 dipoles',
    group    = 'FAC',
    value    = Prms.si_hardedge_length_of_B2_dipoles,
    symbol   = r'<math>L_\text{B2}</math>',
    units    = 'm',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring hardedge length of B3 dipoles',
    group    = 'FAC',
    value    = Prms.si_hardedge_length_of_B3_dipoles,
    symbol   = r'<math>L_\text{B3}</math>',
    units    = 'm',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring hardedge length of BC dipoles',
    group    = 'FAC',
    value    = Prms.si_hardedge_length_of_BC_dipoles,
    symbol   = r'<math>L_\text{BC}</math>',
    units    = 'm',
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring B1 dipole magnetic field',
    group    = 'FAC',
    value    = Prms.si_B1_dipole_magnetic_field,
    symbol   = r'<math>B_\text{B1}</math>',
    units    = 'T',
    deps     = ['Storage ring beam magnetic rigidity',
                'Storage ring B1 dipole bending radius'],
    obs      = [r'<math>B_\text{B1} = \frac{(B\rho)}{\rho_\text{B1}}</math>'],
  ),
                
  Parameter(
    name     = 'Storage ring B2 dipole magnetic field',
    group    = 'FAC',
    value    = Prms.si_B2_dipole_magnetic_field,
    symbol   = r'<math>B_\text{B2}</math>',
    units    = 'T',
    deps     = ['Storage ring beam magnetic rigidity',
                'Storage ring B2 dipole bending radius'],
    obs      = [r'<math>B_\text{B2} = \frac{(B\rho)}{\rho_\text{B2}}</math>'],
  ),
                
  Parameter(
    name     = 'Storage ring B3 dipole magnetic field',
    group    = 'FAC',
    value    = Prms.si_B3_dipole_magnetic_field,
    symbol   = r'<math>B_\text{B3}</math>',
    units    = 'T',
    deps     = ['Storage ring beam magnetic rigidity',
                'Storage ring B3 dipole bending radius'],
    obs      = [r'<math>B_\text{B3} = \frac{(B\rho)}{\rho_\text{B3}}</math>'],
  ),
                
  Parameter(
    name     = 'Storage ring BC dipole magnetic field',
    group    = 'FAC',
    value    = Prms.si_BC_dipole_magnetic_field,
    symbol   = r'<math>B_\text{BC}</math>',
    units    = 'T',
    deps     = ['Storage ring beam magnetic rigidity',
                'Storage ring BC dipole bending radius'],
    obs      = [r'<math>B_\text{BC} = \frac{(B\rho)}{\rho_\text{BC}}</math>'],
  ),
                
  Parameter(
    name     = 'Storage ring B1 dipole bending radius',
    group    = 'FAC',
    value    = Prms.si_B1_dipole_bending_radius,
    symbol   = r'<math>\rho_\text{B1}</math>',
    units    = 'm',
    deps     = ['Storage ring hardedge length of B1 dipoles',
                'Storage ring deflection angle of B1 dipoles'],
    obs      = [r'<math>\rho_\text{B1} = \frac{L_\text{B1}}{\theta_\text{B1}}</math>'],
  ),
  
  Parameter(
    name     = 'Storage ring B2 dipole bending radius',
    group    = 'FAC',
    value    = Prms.si_B2_dipole_bending_radius,
    symbol   = r'<math>\rho_\text{B2}</math>',
    units    = 'm',
    deps     = ['Storage ring hardedge length of B2 dipoles',
                'Storage ring deflection angle of B2 dipoles'],
    obs      = [r'<math>\rho_\text{B2} = \frac{L_\text{B2}}{\theta_\text{B2}}</math>'],
  ),
  
  Parameter(
    name     = 'Storage ring B3 dipole bending radius',
    group    = 'FAC',
    value    = Prms.si_B3_dipole_bending_radius,
    symbol   = r'<math>\rho_\text{B3}</math>',
    units    = 'm',
    deps     = ['Storage ring hardedge length of B3 dipoles',
                'Storage ring deflection angle of B3 dipoles'],
    obs      = [r'<math>\rho_\text{B3} = \frac{L_\text{B3}}{\theta_\text{B3}}</math>'],
  ),
  
  Parameter(
    name     = 'Storage ring BC dipole bending radius',
    group    = 'FAC',
    value    = Prms.si_BC_dipole_bending_radius,
    symbol   = r'<math>\rho_\text{BC}</math>',
    units    = 'm',
    deps     = ['Storage ring hardedge length of BC dipoles',
                'Storage ring deflection angle of BC dipoles'],
    obs      = [r'<math>\rho_\text{BC} = \frac{L_\text{BC}}{\theta_\text{BC}}</math>'],
  ),
  
  Parameter(
    name     = 'Storage ring B1 dipole critical energy',
    group    = 'FAC',
    value    = Prms.si_B1_dipole_critical_energy,
    symbol   = r'<math>\epsilon_\text{c,B1}</math>',
    units    = 'keV',
    deps     = ['Storage ring beam gamma factor',
                'Storage ring B1 dipole bending radius'],
    obs      = [r'<math>\epsilon_\text{c,B1} = \frac{3}{2} \hbar c \frac{\gamma^3}{\rho_\text{B1}}</math>'],
  ),
                
  Parameter(
    name     = 'Storage ring B2 dipole critical energy',
    group    = 'FAC',
    value    = Prms.si_B2_dipole_critical_energy,
    symbol   = r'<math>\epsilon_\text{c,B2}</math>',
    units    = 'keV',
    deps     = ['Storage ring beam gamma factor',
                'Storage ring B2 dipole bending radius'],
    obs      = [r'<math>\epsilon_\text{c,B2} = \frac{3}{2} \hbar c \frac{\gamma^3}{\rho_\text{B2}}</math>'],
  ),
                
  Parameter(
    name     = 'Storage ring B3 dipole critical energy',
    group    = 'FAC',
    value    = Prms.si_B3_dipole_critical_energy,
    symbol   = r'<math>\epsilon_\text{c,B3}</math>',
    units    = 'keV',
    deps     = ['Storage ring beam gamma factor',
                'Storage ring B3 dipole bending radius'],
    obs      = [r'<math>\epsilon_\text{c,B3} = \frac{3}{2} \hbar c \frac{\gamma^3}{\rho_\text{B3}}</math>'],
  ),
                
  Parameter(
    name     = 'Storage ring BC dipole critical energy',
    group    = 'FAC',
    value    = Prms.si_BC_dipole_critical_energy,
    symbol   = r'<math>\epsilon_\text{c,BC}</math>',
    units    = 'keV',
    deps     = ['Storage ring beam gamma factor',
                'Storage ring BC dipole bending radius'],
    obs      = [r'<math>\epsilon_\text{c,BC} = \frac{3}{2} \hbar c \frac{\gamma^3}{\rho_\text{BC}}</math>'],
  ),
                
  Parameter(
    name     = 'Storage ring deflection angle of B1 dipoles',
    group    = 'FAC',
    value    = Prms.si_B1_dipole_deflection_angle,
    symbol   = r'<math>\theta_\text{B1}</math>',
    units    = unicode('°',encoding='utf-8'),
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring deflection angle of B2 dipoles',
    group    = 'FAC',
    value    = Prms.si_B2_dipole_deflection_angle,
    symbol   = r'<math>\theta_\text{B2}</math>',
    units    = unicode('°',encoding='utf-8'),
    deps     = [],
    obs      = [],
  ),
                            
  Parameter(
    name     = 'Storage ring deflection angle of B3 dipoles',
    group    = 'FAC',
    value    = Prms.si_B3_dipole_deflection_angle,
    symbol   = r'<math>\theta_\text{B3}</math>',
    units    = unicode('°',encoding='utf-8'),
    deps     = [],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring deflection angle of BC dipoles',
    group    = 'FAC',
    value    = Prms.si_BC_dipole_deflection_angle,
    symbol   = r'<math>\theta_\text{BC}</math>',
    units    = unicode('°',encoding='utf-8'),
    deps     = [],
    obs      = [],
  ),
                           
  Parameter(
    name     = 'Storage ring optics mode',
    group    = 'FAC',
    value    = Prms.si_optics_mode,
    symbol   = '',
    units    = '',
    deps     = [],
    obs      = [],
  ),
  
  Parameter(
    name     = 'Storage ring horizontal betatron tune',
    group    = 'FAC',
    value    = Prms.si_horizontal_betatron_tune,
    symbol   = r'<math>\nu_x</math>',
    units    = '',
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [],
  ),
                
  Parameter(
    name     = 'Storage ring vertical betatron tune',
    group    = 'FAC',
    value    = Prms.si_vertical_betatron_tune,
    symbol   = r'<math>\nu_y</math>',
    units    = '',
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [],
  ),
  
  Parameter(
    name     = 'Storage ring horizontal beam size at center of long straight sections',
    group    = 'FAC',
    value    = Prms.si_horizontal_beam_size_at_center_long_straight_sections,
    symbol   = r'<math>\sigma_\text{x, LSS}</math>',
    units    = unicode('μm',encoding='utf-8'),
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [r'<math>\sigma_\text{x, LSS} = \sqrt{\epsilon_x \beta_{x,\text{LSS}} + \left(\sigma_\delta \eta_{x, \text{LSS}}\right)^2}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring horizontal beam size at center of short straight sections',
    group    = 'FAC',
    value    = Prms.si_horizontal_beam_size_at_center_short_straight_sections,
    symbol   = r'<math>\sigma_\text{x, SSS}</math>',
    units    = unicode('μm',encoding='utf-8'),
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [r'<math>\sigma_\text{x, SSS} = \sqrt{\epsilon_x \beta_{x,\text{SSS}} + \left(\sigma_\delta \eta_{x, \text{SSS}}\right)^2}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring horizontal beam size at center of BC dipoles',
    group    = 'FAC',
    value    = Prms.si_horizontal_beam_size_at_center_bc_dipoles,
    symbol   = r'<math>\sigma_\text{x, BC}</math>',
    units    = unicode('μm',encoding='utf-8'),
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [r'<math>\sigma_\text{x, BC} = \sqrt{\epsilon_x \beta_{x,\text{BC}} + \left(\sigma_\delta \eta_{x, \text{BC}}\right)^2}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring vertical beam size at center of long straight sections',
    group    = 'FAC',
    value    = Prms.si_vertical_beam_size_at_center_long_straight_sections,
    symbol   = r'<math>\sigma_\text{y, LSS}</math>',
    units    = unicode('μm',encoding='utf-8'),
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [r'<math>\sigma_\text{y, LSS} = \sqrt{\epsilon_y \beta_{y,\text{LSS}} + \left(\sigma_\delta \eta_{y, \text{LSS}}\right)^2}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring vertical beam size at center of short straight sections',
    group    = 'FAC',
    value    = Prms.si_vertical_beam_size_at_center_short_straight_sections,
    symbol   = r'<math>\sigma_\text{y, SSS}</math>',
    units    = unicode('μm',encoding='utf-8'),
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [r'<math>\sigma_\text{y, SSS} = \sqrt{\epsilon_y \beta_{y,\text{SSS}} + \left(\sigma_\delta \eta_{y, \text{SSS}}\right)^2}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring vertical beam size at center of BC dipoles',
    group    = 'FAC',
    value    = Prms.si_vertical_beam_size_at_center_bc_dipoles,
    symbol   = r'<math>\sigma_\text{y, BC}</math>',
    units    = unicode('μm',encoding='utf-8'),
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [r'<math>\sigma_\text{y, BC} = \sqrt{\epsilon_y \beta_{y,\text{BC}} + \left(\sigma_\delta \eta_{y, \text{BC}}\right)^2}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring horizontal beam divergence at center of long straight sections',
    group    = 'FAC',
    value    = Prms.si_horizontal_beam_divergence_at_center_long_straight_sections,
    symbol   = r"<math>\sigma_\text{x', LSS}</math>",
    units    = unicode('μrad',encoding='utf-8'),
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [r"<math>\sigma_\text{x', LSS} = \sqrt{\epsilon_x \gamma_{x,\text{LSS}} + \left(\sigma_\delta \eta'_{x, \text{LSS}}\right)^2}</math>"],
  ),
                  
  Parameter(
    name     = 'Storage ring horizontal beam divergence at center of short straight sections',
    group    = 'FAC',
    value    = Prms.si_horizontal_beam_divergence_at_center_short_straight_sections,
    symbol   = r"<math>\sigma_\text{x', SSS}</math>",
    units    = unicode('μrad',encoding='utf-8'),
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [r"<math>\sigma_\text{x', SSS} = \sqrt{\epsilon_x \gamma_{x,\text{SSS}} + \left(\sigma_\delta \eta'_{x, \text{SSS}}\right)^2}</math>"],
  ),
                  
  Parameter(
    name     = 'Storage ring horizontal beam divergence at center of BC dipoles',
    group    = 'FAC',
    value    = Prms.si_horizontal_beam_divergence_at_center_bc_dipoles,
    symbol   = r"<math>\sigma_\text{x', BC}</math>",
    units    = unicode('μrad',encoding='utf-8'),
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [r"<math>\sigma_\text{x', BC} = \sqrt{\epsilon_x \gamma_{x,\text{BC}} + \left(\sigma_\delta \eta'_{x, \text{BC}}\right)^2}</math>"],
  ),
                  
  Parameter(
    name     = 'Storage ring vertical beam divergence at center of long straight sections',
    group    = 'FAC',
    value    = Prms.si_vertical_beam_divergence_at_center_long_straight_sections,
    symbol   = r"<math>\sigma_\text{y', LSS}</math>",
    units    = unicode('μrad',encoding='utf-8'),
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [r"<math>\sigma_\text{y', LSS} = \sqrt{\epsilon_y \gamma_{y,\text{LSS}} + \left(\sigma_\delta \eta'_{y, \text{LSS}}\right)^2}</math>"],
  ),
                  
  Parameter(
    name     = 'Storage ring vertical beam divergence at center of short straight sections',
    group    = 'FAC',
    value    = Prms.si_vertical_beam_divergence_at_center_short_straight_sections,
    symbol   = r"<math>\sigma_\text{y', SSS}</math>",
    units    = unicode('μrad',encoding='utf-8'),
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [r"<math>\sigma_\text{y', SSS} = \sqrt{\epsilon_y \gamma_{y,\text{SSS}} + \left(\sigma_\delta \eta'_{y, \text{SSS}}\right)^2}</math>"],
  ),
                  
  Parameter(
    name     = 'Storage ring vertical beam divergence at center of BC dipoles',
    group    = 'FAC',
    value    = Prms.si_vertical_beam_divergence_at_center_bc_dipoles,
    symbol   = r"<math>\sigma_\text{y', BC}</math>",
    units    = unicode('μrad',encoding='utf-8'),
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [r"<math>\sigma_\text{y', BC} = \sqrt{\epsilon_y \gamma_{y,\text{BC}} + \left(\sigma_\delta \eta'_{y, \text{BC}}\right)^2}</math>"],
  ),
    
  Parameter(
    name     = 'Storage ring horizontal natural chromaticity',
    group    = 'FAC',
    value    = Prms.si_horizontal_natural_chromaticity,
    symbol   = r'<math>\xi_{x,0}</math>',
    units    = '',
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [],
  ),
                
  Parameter(
    name     = 'Storage ring vertical natural chromaticity',
    group    = 'FAC',
    value    = Prms.si_vertical_natural_chromaticity,
    symbol   = r'<math>\xi_{y,0}</math>',
    units    = '',
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [],
  ),

  Parameter(
    name     = 'Storage ring horizontal chromaticity',
    group    = 'FAC',
    value    = Prms.si_horizontal_chromaticity,
    symbol   = r'<math>\xi_x</math>',
    units    = '',
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [],
  ),
                
  Parameter(
    name     = 'Storage ring vertical chromaticity',
    group    = 'FAC',
    value    = Prms.si_vertical_chromaticity,
    symbol   = r'<math>\xi_y</math>',
    units    = '',
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [],
  ),
        
  Parameter(
    name     = 'Storage ring horizontal betatron frequency',
    group    = 'FAC',
    value    = Prms.si_horizontal_betatron_frequency,
    symbol   = r'<math>f_x</math>',
    units    = 'kHz',
    deps     = ['Storage ring revolution frequency',
                'Storage ring horizontal betatron tune'],
    obs      = [r'<math>f_x = f_\text{rev} \left( \nu_x - \lfloor \nu_x\rfloor \right)</math>'],
  ),
                
  Parameter(
    name     = 'Storage ring vertical betatron frequency',
    group    = 'FAC',
    value    = Prms.si_vertical_betatron_frequency,
    symbol   = r'<math>f_y = f_\text{rev} \left( \nu_y - \lfloor \nu_y\rfloor \right)</math>',
    units    = 'kHz',
    deps     = ['Storage ring revolution frequency',
                'Storage ring vertical betatron tune'],
    obs      = [],
  ),
       
  Parameter(
    name     = 'Storage ring radiation integral I1 from dipoles',
    group    = 'FAC',
    value    = Prms.si_radiation_integral_I1_from_dipoles,
    symbol   = r'<math>I_\text{1,DIP}</math>',
    units    = 'm',
    deps     = ['Storage ring beam magnetic rigidity',
                'Storage ring lattice version','Storage ring optics mode'],
    obs      = [r'<math>I_\text{1,DIP} = \oint{\frac{\eta_x}{\rho_x}\,ds}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring radiation integral I2 from dipoles',
    group    = 'FAC',
    value    = Prms.si_radiation_integral_I2_from_dipoles,
    symbol   = r'<math>I_\text{2,DIP}</math>',
    units    = 'm<sup>-1</sup>',
    deps     = ['Storage ring beam magnetic rigidity',
                'Storage ring lattice version'],
    obs      = [r'<math>I_\text{2,DIP} = \oint{\frac{1}{\rho_x^2}\,ds}</math>'],
  ),
   
  Parameter(
    name     = 'Storage ring radiation integral I3 from dipoles',
    group    = 'FAC',
    value    = Prms.si_radiation_integral_I3_from_dipoles,
    symbol   = r'<math>I_\text{3,DIP}</math>',
    units    = 'm<sup>-2</sup>',
    deps     = ['Storage ring beam magnetic rigidity',
                'Storage ring lattice version'],
    obs      = [r'<math>I_\text{3,DIP} = \oint{\frac{1}{|\rho_x|^3}\,ds}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring radiation integral I4 from dipoles',
    group    = 'FAC',
    value    = Prms.si_radiation_integral_I4_from_dipoles,
    symbol   = r'<math>I_\text{4,DIP}</math>',
    units    = 'm<sup>-1</sup>',
    deps     = ['Storage ring beam magnetic rigidity',
                'Storage ring lattice version'],
    obs      = [r'<math>I_\text{4,DIP} = \frac{\eta_x(s_0) \tan \theta(s_0)}{\rho_x^2} + \oint{\frac{\eta_x}{\rho_x^3} \left(1 + 2 \rho_x^2 k\right)\,ds} + \frac{\eta_x(s_1) \tan \theta(s_1)}{\rho_x^2}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring radiation integral I5 from dipoles',
    group    = 'FAC',
    value    = Prms.si_radiation_integral_I5_from_dipoles,
    symbol   = r'<math>I_\text{5,DIP}</math>',
    units    = 'm<sup>-1</sup>',
    deps     = ['Storage ring beam magnetic rigidity',
                'Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [r'<math>I_\text{5,DIP} = \oint{\frac{H_x}{|\rho_x|^3}\,ds}</math>',
                r"<math>H_x \equiv \gamma_x \eta_x^2 + 2 \alpha_x \eta_x \eta_x^' + \beta_x {\eta_x^'}^2</math>"],
  ),
                  
  Parameter(
    name     = 'Storage ring radiation integral I6 from dipoles',
    group    = 'FAC',
    value    = Prms.si_radiation_integral_I6_from_dipoles,
    symbol   = r'<math>I_\text{6,DIP}</math>',
    units    = 'm<sup>-1</sup>',
    deps     = ['Storage ring beam magnetic rigidity',
                'Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [r'<math>I_\text{6,DIP} = \oint{k^2 \eta_x^2\,ds}</math>'],
  ),
  
  Parameter(
    name     = 'Storage ring radiation integral I1 from IDs',
    group    = 'FAC',
    value    = Prms.si_radiation_integral_I1_from_IDs,
    symbol   = r'<math>I_\text{1,IDs}</math>',
    units    = 'm',
    deps     = ['Storage ring beam magnetic rigidity',
                'Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [r'<math>I_\text{1,IDs} = \oint{\frac{\eta_x}{\rho_x}\,ds}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring radiation integral I2 from IDs',
    group    = 'FAC',
    value    = Prms.si_radiation_integral_I2_from_IDs,
    symbol   = r'<math>I_\text{2,IDs}</math>',
    units    = 'm<sup>-1</sup>',
    deps     = ['Storage ring beam magnetic rigidity',
                'Storage ring lattice version'],
    obs      = [r'<math>I_\text{2,IDs} = \oint{\frac{1}{\rho_x^2}\,ds}</math>'],
  ),
   
  Parameter(
    name     = 'Storage ring radiation integral I3 from IDs',
    group    = 'FAC',
    value    = Prms.si_radiation_integral_I3_from_IDs,
    symbol   = r'<math>I_\text{3,IDs}</math>',
    units    = 'm<sup>-2</sup>',
    deps     = ['Storage ring beam magnetic rigidity',
                'Storage ring lattice version'],
    obs      = [r'<math>I_\text{3,IDs} = \oint{\frac{1}{|\rho_x|^3}\,ds}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring radiation integral I4 from IDs',
    group    = 'FAC',
    value    = Prms.si_radiation_integral_I4_from_IDs,
    symbol   = r'<math>I_\text{4,IDs}</math>',
    units    = 'm<sup>-1</sup>',
    deps     = ['Storage ring beam magnetic rigidity',
                'Storage ring lattice version'],
    obs      = [r'<math>I_\text{4,IDs} = \frac{\eta_x(s_0) \tan \theta(s_0)}{\rho_x^2} + \oint{\frac{\eta_x}{\rho_x^3} \left(1 + 2 \rho_x^2 k\right)\,ds} + \frac{\eta_x(s_1) \tan \theta(s_1)}{\rho_x^2}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring radiation integral I5 from IDs',
    group    = 'FAC',
    value    = Prms.si_radiation_integral_I5_from_IDs,
    symbol   = r'<math>I_\text{5,IDs}</math>',
    units    = 'm<sup>-1</sup>',
    deps     = ['Storage ring beam magnetic rigidity',
                'Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [r'<math>I_\text{5,IDs} = \oint{\frac{H_x}{|\rho_x|^3}\,ds}</math>',
                r"<math>H_x \equiv \gamma_x \eta_x^2 + 2 \alpha_x \eta_x \eta_x^' + \beta_x {\eta_x^'}^2</math>"],
  ),
                  
  Parameter(
    name     = 'Storage ring radiation integral I6 from IDs',
    group    = 'FAC',
    value    = Prms.si_radiation_integral_I6_from_IDs,
    symbol   = r'<math>I_\text{6,IDs}</math>',
    units    = 'm<sup>-1</sup>',
    deps     = ['Storage ring beam magnetic rigidity',
                'Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [r'<math>I_\text{6,IDs} = \oint{k^2 \eta_x^2\,ds}</math>'],
  ),
  
  Parameter(
    name     = 'Storage ring radiation integral I1',
    group    = 'FAC',
    value    = Prms.si_radiation_integral_I1,
    symbol   = r'<math>I_\text{1}</math>',
    units    = 'm',
    deps     = ['Storage ring radiation integral I1 from dipoles',
                'Storage ring radiation integral I1 from IDs'],
    obs      = [r'<math>I_\text{1} = I_\text{1,DIP} + I_\text{1,IDs}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring radiation integral I2',
    group    = 'FAC',
    value    = Prms.si_radiation_integral_I2,
    symbol   = r'<math>I_\text{2}</math>',
    units    = 'm<sup>-1</sup>',
    deps     = ['Storage ring radiation integral I2 from dipoles',
                'Storage ring radiation integral I2 from IDs'],
    obs      = [r'<math>I_\text{2} = I_\text{2,DIP} + I_\text{2,IDs}</math>'],
  ),
   
  Parameter(
    name     = 'Storage ring radiation integral I3',
    group    = 'FAC',
    value    = Prms.si_radiation_integral_I3,
    symbol   = r'<math>I_\text{3}</math>',
    units    = 'm<sup>-2</sup>',
    deps     = ['Storage ring radiation integral I3 from dipoles',
                'Storage ring radiation integral I3 from IDs'],
    obs      = [r'<math>I_\text{3} = I_\text{3,DIP} + I_\text{3,IDs}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring radiation integral I4',
    group    = 'FAC',
    value    = Prms.si_radiation_integral_I4,
    symbol   = r'<math>I_\text{4}</math>',
    units    = 'm<sup>-1</sup>',
    deps     = ['Storage ring radiation integral I4 from dipoles',
                'Storage ring radiation integral I4 from IDs'],
    obs      = [r'<math>I_\text{4} = I_\text{4,DIP} + I_\text{4,IDs}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring radiation integral I5',
    group    = 'FAC',
    value    = Prms.si_radiation_integral_I5,
    symbol   = r'<math>I_5</math>',
    units    = 'm<sup>-1</sup>',
    deps     = ['Storage ring radiation integral I5 from dipoles',
                'Storage ring radiation integral I5 from IDs'],
    obs      = [r'<math>I_5 = I_\text{5,DIP} + I_\text{5,IDs}</math>',
                r"<math>H_x \equiv \gamma_x \eta_x^2 + 2 \alpha_x \eta_x \eta_x^' + \beta_x {\eta_x^'}^2</math>"],
  ),
                  
  Parameter(
    name     = 'Storage ring radiation integral I6',
    group    = 'FAC',
    value    = Prms.si_radiation_integral_I6,
    symbol   = r'<math>I_\text{6}</math>',
    units    = 'm<sup>-1</sup>',
    deps     = ['Storage ring radiation integral I6 from dipoles',
                'Storage ring radiation integral I6 from IDs'],
    obs      = [r'<math>I_\text{6} = I_\text{6,DIP} + I_\text{6,IDs}</math>'],
  ),
   
  
  Parameter(
    name     = 'Storage ring energy loss per turn from dipoles',
    group    = 'FAC',
    value    = Prms.si_energy_loss_per_turn_from_dipoles,
    symbol   = r'<math>U_\text{0,DIP}</math>',
    units    = 'keV',
    deps     = ['Storage ring beam energy',
                'Storage ring radiation integral I2 from dipoles'],
    obs      = [r'<math>U_\text{0,DIP} = \oint{P_\gamma dt} = \frac{C_\gamma}{2\pi} E^4_0 I_\text{2,DIP}</math>'],
  ),
  
  Parameter(
    name     = 'Storage ring energy loss per turn from IDs',
    group    = 'FAC',
    value    = Prms.si_energy_loss_per_turn_from_IDs,
    symbol   = r'<math>U_\text{0,IDs}</math>',
    units    = 'keV',
    deps     = ['Storage ring beam energy',
                'Storage ring radiation integral I2 from IDs'],
    obs      = [r'<math>U_\text{0,IDs} = \oint{P_\gamma dt} = \frac{C_\gamma}{2\pi} E^4_0 I_\text{2,IDs}</math>'],
  ),
      
  Parameter(
    name     = 'Storage ring radiation power from dipoles',
    group    = 'FAC',
    value    = Prms.si_radiation_power_from_dipoles,
    symbol   = r'<math>P_{\text{DIP}}</math>',
    units    = 'kW',
    deps     = ['Storage ring energy loss per turn from dipoles',
                'Storage ring beam current'],
    obs      = [r'<math>P = U_{0,\text{DIP}} I</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring radiation power',
    group    = 'FAC',
    value    = Prms.si_radiation_power,
    symbol   = r'<math>P</math>',
    units    = 'kW',
    deps     = ['Storage ring energy loss per turn',
                'Storage ring beam current'],
    obs      = [r'<math>P = U_{0} I</math>'],
  ),
                   
  Parameter(
    name     = 'Storage ring energy loss per turn',
    group    = 'FAC',
    value    = Prms.si_energy_loss_per_turn,
    symbol   = r'<math>U_\text{0}</math>',
    units    = 'keV',
    deps     = ['Storage ring beam energy',
                'Storage ring radiation integral I2'],
    obs      = [r'<math>U_\text{0} = \oint{P_\gamma dt} = \frac{C_\gamma}{2\pi} E^4_0 I_\text{2}</math>'],
  ),
                              
  Parameter(
    name     = 'Storage ring overvoltage from dipoles',
    group    = 'FAC',
    value    = Prms.si_overvoltage_from_dipoles,
    symbol   = r'<math>q_\text{DIP}</math>',
    units    = '',
    deps     = ['Storage ring RF cavity peak voltage',
                'Storage ring energy loss per turn from dipoles'],
    obs      = [r'<math>q_\text{DIP} = \frac{eV_\text{RF}}{U_\text{0,DIP}}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring overvoltage',
    group    = 'FAC',
    value    = Prms.si_overvoltage,
    symbol   = r'<math>q</math>',
    units    = '',
    deps     = ['Storage ring RF cavity peak voltage',
                'Storage ring energy loss per turn'],
    obs      = [r'<math>q = \frac{eV_\text{RF}}{U_\text{0}}</math>'],
  ),
  
  Parameter(
    name     = 'Storage ring synchronous phase from dipoles',
    group    = 'FAC',
    value    = Prms.si_synchronous_phase_from_dipoles,
    symbol   = r'<math>\phi_0</math>',
    units    = unicode('°',encoding='utf-8'),
    deps     = ['Storage ring overvoltage from dipoles'],
    obs      = [r'<math>\phi_0 = \pi - \arcsin\left(\frac{1}{q_\text{DIP}}\right)</math>'],
  ),
           
  Parameter(
    name     = 'Storage ring synchronous phase',
    group    = 'FAC',
    value    = Prms.si_synchronous_phase,
    symbol   = r'<math>\phi_0</math>',
    units    = unicode('°',encoding='utf-8'),
    deps     = ['Storage ring overvoltage'],
    obs      = [r'<math>\phi_0 = \pi - \arcsin\left(\frac{1}{q}\right)</math>'],
  ),
                                   
  Parameter(
    name     = 'Storage ring linear momentum compaction from dipoles',
    group    = 'FAC',
    value    = Prms.si_linear_momentum_compaction_from_dipoles,
    symbol   = r'<math>\alpha_\text{1,DIP}</math>',
    units    = '',
    deps     = ['Storage ring radiation integral I1 from dipoles',
                'Storage ring lattice circumference'],
    obs      = [r'<math>\alpha_\text{1,DIP} = \frac{I_\text{1,DIP}}{C}</math>'],
  ),
  
  Parameter(
    name     = 'Storage ring linear momentum compaction',
    group    = 'FAC',
    value    = Prms.si_linear_momentum_compaction,
    symbol   = r'<math>\alpha_\text{1}</math>',
    units    = '',
    deps     = ['Storage ring radiation integral I1',
                'Storage ring lattice circumference'],
    obs      = [r'<math>\alpha_\text{1} = \frac{I_\text{1}}{C}</math>'],
  ),
                            
  Parameter(
    name     = 'Storage ring horizontal damping partition number from dipoles',
    group    = 'FAC',
    value    = Prms.si_horizontal_damping_partition_number_from_dipoles,
    symbol   = r'<math>J_{x,\text{DIP}}</math>',
    units    = '',
    deps     = ['Storage ring radiation integral I2 from dipoles',
                'Storage ring radiation integral I4 from dipoles'],
    obs      = [r'<math>J_{x,\text{DIP}} = 1 - \frac{I_\text{4,DIP}}{I_\text{2,DIP}}</math>'],
  ),
  
  Parameter(
    name     = 'Storage ring vertical damping partition number from dipoles',
    group    = 'FAC',
    value    = Prms.si_vertical_damping_partition_number_from_dipoles,
    symbol   = r'<math>J_{y,\text{DIP}}</math>',
    units    = '',
    deps     = [],
    obs      = ['Vertical damping partition number is identically one for error-free machines for which vertical dispersion functions are zero everywhere.',
                r'<math>J_{y,\text{DIP}} = 1 - \frac{I_{4y,DIP}}{I_\text{2,DIP}} \equiv 1</math>'],
  ),
  
  Parameter(
    name     = 'Storage ring longitudinal damping partition number from dipoles',
    group    = 'FAC',
    value    = Prms.si_longitudinal_damping_partition_number_from_dipoles,
    symbol   = r'<math>J_{s, \text{DIP}}</math>',
    units    = '',
    deps     = ['Storage ring horizontal damping partition number from dipoles',
               'Storage ring vertical damping partition number from dipoles'],
    obs      = ["Its value is derived from Robinson's sum rule.",
                r'<math>J_{s, \text{DIP}} = 4 - J_{s, \text{DIP}} - J_{y, \text{DIP}}</math>'],
  ),
  
  Parameter(
    name     = 'Storage ring linear slip phase from dipoles',
    group    = 'FAC',
    value    = Prms.si_linear_slip_phase_from_dipoles,
    symbol   = r'<math>\eta_{1,\text{DIP}}</math>',
    units    = '',
    deps     = ['Storage ring beam gamma factor',
                'Storage ring linear momentum compaction from dipoles'],
    obs      = [r'<math>\eta_{1,\text{DIP}} = \alpha_{1,\text{DIP}} - \gamma^{-2}</math>'],
  ),
 
  Parameter(
    name     = 'Storage ring linear slip phase',
    group    = 'FAC',
    value    = Prms.si_linear_slip_phase,
    symbol   = r'<math>\eta_{1}</math>',
    units    = '',
    deps     = ['Storage ring beam gamma factor',
                'Storage ring linear momentum compaction'],
    obs      = [r'<math>\eta_{1} = \alpha_{1} - \gamma^{-2}</math>'],
  ),
  
  Parameter(
    name     = 'Storage ring RF energy acceptance from dipoles',
    group    = 'FAC',
    value    = Prms.si_rf_energy_acceptance_from_dipoles,
    symbol   = r'<math>\epsilon_{\text{max},\text{DIP}}</math>',
    units    = '%',
    deps     = ['Storage ring beam energy',
                'Storage ring harmonic number',
                'Storage ring overvoltage from dipoles',
                'Storage ring energy loss per turn from dipoles',
                'Storage ring linear momentum compaction from dipoles'],
    obs      = [r'<math>\epsilon_\text{max, DIP} = \sqrt{\frac{1}{\pi h \alpha_\text{x, DIP}} \frac{U_\text{0, DIP}}{E} F(q_\text{DIP})}</math>',
                r'<math>F(q) = 2 \left( \sqrt{q^2 - 1} - \cos^{-1} (1/q) \right)</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring RF energy acceptance',
    group    = 'FAC',
    value    = Prms.si_rf_energy_acceptance,
    symbol   = r'<math>\epsilon_{\text{max}}</math>',
    units    = '%',
    deps     = ['Storage ring beam energy',
                'Storage ring harmonic number',
                'Storage ring overvoltage',
                'Storage ring energy loss per turn',
                'Storage ring linear momentum compaction'],
    obs      = [r'<math>\epsilon_{\text{max}} = \sqrt{\frac{1}{\pi h \alpha_{x}} \frac{U_{0}}{E} F(q)}</math>',
                r'<math>F(q) = 2 \left( \sqrt{q^2 - 1} - \cos^{-1} (1/q) \right)</math>'],
  ),

  Parameter(
    name     = 'Storage ring horizontal damping partition number from dipoles',
    group    = 'FAC',
    value    = Prms.si_horizontal_damping_partition_number_from_dipoles,
    symbol   = r'<math>J_{\text{x},\text{DIP}}</math>',
    units    = '',
    deps     = ['Storage ring radiation integral I2 from dipoles',
                'Storage ring radiation integral I4 from dipoles'],
    obs      = [r'<math>J_{\text{x},\text{DIP}} = 1 - \frac{I_{\text{4},\text{DIP}}}{I_{\text{2},\text{DIP}}}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring horizontal damping partition number',
    group    = 'FAC',
    value    = Prms.si_horizontal_damping_partition_number,
    symbol   = r'<math>J_{\text{x}}</math>',
    units    = '',
    deps     = ['Storage ring radiation integral I2',
                'Storage ring radiation integral I4'],
    obs      = [r'<math>J_{\text{x}} = 1 - \frac{I_{\text{4}}}{I_{\text{2}}}</math>'],
  ),
                  
  

  Parameter(
    name     = 'Storage ring vertical damping partition number from dipoles',
    group    = 'FAC',
    value    = Prms.si_vertical_damping_partition_number_from_dipoles,
    symbol   = r'<math>J_{\text{y},\text{DIP}}</math>',
    units    = '',
    deps     = [],
    obs      = [r'<math>J_{\text{y},\text{DIP}} = 1 - \frac{I_{\text{4},\text{y}}}{I_{\text{2},\text{DIP}}} \equiv 1</math>',
                'Vertical damping partition number from dipoles is identically one for error-free machines for which vertical dispersion functions are zero everywhere.'],
  ),

  Parameter(
    name     = 'Storage ring vertical damping partition number',
    group    = 'FAC',
    value    = Prms.si_vertical_damping_partition_number,
    symbol   = r'<math>J_{\text{y}}</math>',
    units    = '',
    deps     = [],
    obs      = [r'<math>J_{\text{y}} = 1 - \frac{I_{\text{4},\text{y}}}{I_{\text{2}}} \equiv 1</math>',
                'Vertical damping partition number is identically one for error-free machines for which vertical dispersion functions are zero everywhere.'],
  ),
 
  Parameter(
    name     = 'Storage ring longitudinal damping partition number from dipoles',
    group    = 'FAC',
    value    = Prms.si_longitudinal_damping_partition_number_from_dipoles,
    symbol   = r'<math>J_{\text{s},\text{DIP}}</math>',
    units    = '',
    deps     = [],
    obs      = [r'<math>J_{\text{s},\text{DIP}} = 2 + \frac{I_{\text{4},\text{DIP}}}{I_{\text{2},\text{DIP}}}</math>',
                'Vertical damping partition number from dipoles is identically one for error-free machines for which vertical dispersion functions are zero everywhere.'],
  ),
                  
  Parameter(
    name     = 'Storage ring longitudinal damping partition number',
    group    = 'FAC',
    value    = Prms.si_longitudinal_damping_partition_number,
    symbol   = r'<math>J_{\text{s}}</math>',
    units    = '',
    deps     = [],
    obs      = [r'<math>J_{\text{s}} = 2 + \frac{I_{\text{4}}}{I_{\text{2}}}</math>',
                'Vertical damping partition number from dipoles is identically one for error-free machines for which vertical dispersion functions are zero everywhere.'],
  ),
       
  Parameter(
    name     = 'Storage ring natural emittance from dipoles',
    group    = 'FAC',
    value    = Prms.si_natural_emittance_from_dipoles,
    symbol   = r'<math>\epsilon_{0,\text{DIP}}</math>',
    units    = unicode('nm⋅rad',encoding='utf-8'),
    deps     = ['Storage ring beam gamma factor',
                'Storage ring horizontal damping partition number from dipoles',
                'Storage ring radiation integral I5 from dipoles',
                'Storage ring radiation integral I2 from dipoles'],
    obs      = [r'<math>\epsilon_{0,\text{DIP}} = C_\text{q} \frac{\gamma^2}{J_\text{x,DIP}} \frac{I_\text{5, DIP}}{I_\text{2, DIP}}</math>'],
  ),                
  
  Parameter(
    name     = 'Storage ring natural emittance',
    group    = 'FAC',
    value    = Prms.si_natural_emittance,
    symbol   = r'<math>\epsilon_{0}</math>',
    units    = unicode('nm⋅rad',encoding='utf-8'),
    deps     = ['Storage ring beam gamma factor',
                'Storage ring horizontal damping partition number',
                'Storage ring radiation integral I5',
                'Storage ring radiation integral I2'],
    obs      = [r'<math>\epsilon_{0} = C_\text{q} \frac{\gamma^2}{J_{\text{x}}} \frac{I_{\text{5}}}{I_{\text{2}}}</math>'],
  ),  

  Parameter(
    name     = 'Storage ring natural energy spread from dipoles',
    group    = 'FAC',
    value    = Prms.si_natural_energy_spread_from_dipoles,
    symbol   = r'<math>\sigma_{\delta,\text{DIP}}</math>',
    units    = '%',
    deps     = ['Storage ring beam gamma factor',
                'Storage ring radiation integral I2 from dipoles',
                'Storage ring radiation integral I3 from dipoles',
                'Storage ring radiation integral I4 from dipoles'],
    obs      = [r'<math>\sigma_{\delta,\text{DIP}} = \sqrt{C_\text{q} \gamma^2 \frac{I_{\text{3},\text{DIP}}}{2 I_{\text{2},\text{DIP}} + I_{\text{4},\text{DIP}}}}</math>'],
  ),

  Parameter(
    name     = 'Storage ring natural energy spread',
    group    = 'FAC',
    value    = Prms.si_natural_energy_spread,
    symbol   = r'<math>\sigma_{\delta}</math>',
    units    = '%',
    deps     = ['Storage ring beam gamma factor',
                'Storage ring radiation integral I2',
                'Storage ring radiation integral I3',
                'Storage ring radiation integral I4'],
    obs      = [r'<math>\sigma_{\delta} = \sqrt{C_\text{q} \gamma^2 \frac{I_{\text{3}}}{2 I_{\text{2}} + I_{\text{4}}}}</math>'],
  ),
     
      
  Parameter(
    name     = 'Storage ring synchrotron tune from dipoles',
    group    = 'FAC',
    value    = Prms.si_synchrotron_tune_from_dipoles,
    symbol   = r'<math>\nu_{s,\text{DIP}}</math>',
    units    = '',
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [],
  ),
                  
  Parameter(
    name     = 'Storage ring synchrotron tune',
    group    = 'FAC',
    value    = Prms.si_synchrotron_tune,
    symbol   = r'<math>\nu_{s}</math>',
    units    = '',
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [],
  ),
     
  Parameter(
    name     = 'Storage ring synchrotron frequency from dipoles',
    group    = 'FAC',
    value    = Prms.si_synchrotron_frequency_from_dipoles,
    symbol   = r'<math>f_{s,\text{DIP}}</math>',
    units    = 'kHz',
    deps     = ['Storage ring revolution frequency',
                'Storage ring synchrotron tune from dipoles'],
    obs      = [r'<math>f_{s,\text{DIP}} = f_\text{rev} \nu_{s,\text{DIP}}</math>'],
  ),  
                                          
  Parameter(
    name     = 'Storage ring synchrotron frequency',
    group    = 'FAC',
    value    = Prms.si_synchrotron_frequency,
    symbol   = r'<math>f_{s}</math>',
    units    = 'kHz',
    deps     = ['Storage ring revolution frequency',
                'Storage ring synchrotron tune'],
    obs      = [r'<math>f_{s} = f_\text{rev} \nu_{s}</math>'],
  ),  
                                
  Parameter(
    name     = 'Storage ring natural bunch length from dipoles',
    group    = 'FAC',
    value    = Prms.si_natural_bunch_length_from_dipoles,
    symbol   = r'<math>\sigma_{s,\text{DIP}}</math>',
    units    = 'mm',
    deps     = ['Storage ring linear slip phase from dipoles',
                'Storage ring natural energy spread from dipoles',
                'Storage ring synchrotron frequency'],
    obs      = [r'<math>\sigma_{s,\text{DIP}} = \frac{c|\eta_{\text{1},\text{DIP}}|\sigma_{\delta,\text{DIP}}}{f_{s,\text{DIP}}}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring natural bunch length',
    group    = 'FAC',
    value    = Prms.si_natural_bunch_length,
    symbol   = r'<math>\sigma_{s}</math>',
    units    = 'mm',
    deps     = ['Storage ring linear slip phase',
                'Storage ring natural energy spread',
                'Storage ring synchrotron frequency'],
    obs      = [r'<math>\sigma_{s} = \frac{c|\eta_{\text{1},\text{DIP}}|\sigma_{\delta}}{f_{s}}</math>'],
  ),
 
  Parameter(
    name     = 'Storage ring natural bunch duration from dipoles',
    group    = 'FAC',
    value    = Prms.si_natural_bunch_duration_from_dipoles,
    symbol   = r'<math>\sigma_{t,\text{DIP}}</math>',
    units    = 'ps',
    deps     = ['Storage ring natural bunch length from dipoles',
                'Storage ring beam beta factor'],
    obs      = [r'<math>\sigma_{t,\text{DIP}} = \frac{\sigma_{s,\text{DIP}}}{c}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring natural bunch duration',
    group    = 'FAC',
    value    = Prms.si_natural_bunch_duration_from_dipoles,
    symbol   = r'<math>\sigma_{t}</math>',
    units    = 'ps',
    deps     = ['Storage ring natural bunch length',
                'Storage ring beam beta factor'],
    obs      = [r'<math>\sigma_{t} = \frac{\sigma_{s}}{c}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring horizontal radiation damping time from dipoles',
    group    = 'FAC',
    value    = Prms.si_horizontal_radiation_damping_time_from_dipoles,
    symbol   = r'<math>\alpha_{x,\text{DIP}}</math>',
    units    = 'ms',
    deps     = ['Storage ring beam energy',
                'Storage ring radiation integral I2 from dipoles',
                'Storage ring horizontal damping partition number from dipoles',
                'Storage ring lattice circumference'],
    obs      = [r'<math>\alpha_{x,\text{DIP}} = \frac{C_\alpha}{C} E^3 J_{x,\text{DIP}}</math>'],
  ),
  
  Parameter(
    name     = 'Storage ring horizontal radiation damping time',
    group    = 'FAC',
    value    = Prms.si_horizontal_radiation_damping_time_from_dipoles,
    symbol   = r'<math>\alpha_{x}</math>',
    units    = 'ms',
    deps     = ['Storage ring beam energy',
                'Storage ring radiation integral I2',
                'Storage ring horizontal damping partition number',
                'Storage ring lattice circumference'],
    obs      = [r'<math>\alpha_{x} = \frac{C_\alpha}{C} E^3 J_{x}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring vertical radiation damping time from dipoles',
    group    = 'FAC',
    value    = Prms.si_vertical_radiation_damping_time_from_dipoles,
    symbol   = r'<math>\alpha_{y,\text{DIP}}</math>',
    units    = 'ms',
    deps     = ['Storage ring beam energy',
                'Storage ring radiation integral I2 from dipoles',
                'Storage ring vertical damping partition number from dipoles',
                'Storage ring lattice circumference'],
    obs      = [r'<math>\alpha_{y,\text{DIP}} = \frac{C_\alpha}{C} E^3 J_{y,\text{DIP}}</math>'],
  ),
  
  Parameter(
    name     = 'Storage ring vertical radiation damping time',
    group    = 'FAC',
    value    = Prms.si_vertical_radiation_damping_time_from_dipoles,
    symbol   = r'<math>\alpha_{y}</math>',
    units    = 'ms',
    deps     = ['Storage ring beam energy',
                'Storage ring radiation integral I2',
                'Storage ring vertical damping partition number',
                'Storage ring lattice circumference'],
    obs      = [r'<math>\alpha_{y} = \frac{C_\alpha}{C} E^3 J_{y}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring longitudinal radiation damping time from dipoles',
    group    = 'FAC',
    value    = Prms.si_longitudinal_radiation_damping_time_from_dipoles,
    symbol   = r'<math>\alpha_{s,\text{DIP}}</math>',
    units    = 'ms',
    deps     = ['Storage ring beam energy',
                'Storage ring radiation integral I2 from dipoles',
                'Storage ring longitudinal damping partition number from dipoles',
                'Storage ring lattice circumference'],
    obs      = [r'<math>\alpha_{s,\text{DIP}} = \frac{C_\alpha}{C} E^3 J_{s,\text{DIP}}</math>'],
  ),
  
  Parameter(
    name     = 'Storage ring longitudinal radiation damping time',
    group    = 'FAC',
    value    = Prms.si_longitudinal_radiation_damping_time_from_dipoles,
    symbol   = r'<math>\alpha_{s}</math>',
    units    = 'ms',
    deps     = ['Storage ring beam energy',
                'Storage ring radiation integral I2',
                'Storage ring longitudinal damping partition number',
                'Storage ring lattice circumference'],
    obs      = [r'<math>\alpha_{s} = \frac{C_\alpha}{C} E^3 J_{s}</math>'],
  ),
                  
  Parameter(
    name     = 'Storage ring transverse coupling',
    group    = 'FAC',
    value    = Prms.si_transverse_coupling,
    symbol   = r'<math>\kappa</math>',
    units    = '%',
    deps     = ['Storage ring lattice version',
                'Storage ring optics mode'],
    obs      = [],
  ),
           
  Parameter(
    name     = 'Storage ring dipoles alignment error tolerance',
    group    = 'FAC',
    value    = Prms.si_dipoles_alignment_error_tolerance,
    symbol   = r'<math>E_{xy,\text{DIP}}</math>',
    units    = unicode('μm', encoding='utf-8'),
    deps     = [],
    obs      = [r'Random transverse position error (standard deviation) for <math>x</math> and <math>y</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),

  Parameter(
    name     = 'Storage ring quadrupoles alignment error tolerance',
    group    = 'FAC',
    value    = Prms.si_quadrupoles_alignment_error_tolerance,
    symbol   = r'<math>E_{xy,\text{QUAD}}</math>',
    units    = unicode('μm', encoding='utf-8'),
    deps     = [],
    obs      = [r'Random transverse position error (standard deviation) for <math>x</math> and <math>y</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),

  Parameter(
    name     = 'Storage ring sextupoles alignment error tolerance',
    group    = 'FAC',
    value    = Prms.si_sextupoles_alignment_error_tolerance,
    symbol   = r'<math>E_{xy,\text{SEXT}}</math>',
    units    = unicode('μm', encoding='utf-8'),
    deps     = [],
    obs      = [r'Random transverse position error (standard deviation) for <math>x</math> and <math>y</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),

  Parameter(
    name     = 'Storage ring dipoles rotation error tolerance',
    group    = 'FAC',
    value    = Prms.si_dipoles_rotation_error_tolerance,
    symbol   = r'<math>E_{\theta,\text{DIP}}</math>',
    units    = 'mrad',
    deps     = [],
    obs      = [r'Random rotation error (standard deviation) around longitudinal axis.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),

  Parameter(
    name     = 'Storage ring quadrupoles rotation error tolerance',
    group    = 'FAC',
    value    = Prms.si_quadrupoles_rotation_error_tolerance,
    symbol   = r'<math>E_{\theta,\text{QUAD}}</math>',
    units    = 'mrad',
    deps     = [],
    obs      = [r'Random rotation error (standard deviation) around longitudinal axis.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),

  Parameter(
    name     = 'Storage ring sextupoles rotation error tolerance',
    group    = 'FAC',
    value    = Prms.si_sextupoles_rotation_error_tolerance,
    symbol   = r'<math>E_{\theta,\text{SEXT}}</math>',
    units    = 'mrad',
    deps     = [],
    obs      = [r'Random rotation error (standard deviation) around longitudinal axis.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),

  Parameter(
    name     = 'Storage ring dipoles excitation error tolerance',
    group    = 'FAC',
    value    = Prms.si_dipoles_excitation_error_tolerance,
    symbol   = r'<math>E_{\text{exc,DIP}}</math>',
    units    = '%',
    deps     = [],
    obs      = [r'Static or low frequency random excitation error (standard deviation).',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),

  Parameter(
    name     = 'Storage ring quadrupoles excitation error tolerance',
    group    = 'FAC',
    value    = Prms.si_quadrupoles_excitation_error_tolerance,
    symbol   = r'<math>E_{\text{exc,QUAD}}</math>',
    units    = '%',
    deps     = [],
    obs      = [r'Static or low frequency random excitation error (standard deviation).',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),

  Parameter(
    name     = 'Storage ring sextupoles excitation error tolerance',
    group    = 'FAC',
    value    = Prms.si_sextupoles_excitation_error_tolerance,
    symbol   = r'<math>E_{\text{exc,SEXT}}</math>',
    units    = '%',
    deps     = [],
    obs      = [r'Static or low frequency random excitation error (standard deviation).',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring reference position for multipole contribution for dipoles',
    group    = 'FAC',
    value    = Prms.si_reference_position_for_multipole_contribution_for_dipoles,
    symbol   = r'<math>r_{0,\text{DIP}}</math>',
    units    = 'mm',
    deps     = [],
    obs      = [],
  ),
               
  Parameter(
    name     = 'Storage ring systematic normal 6-pole error tolerance for dipoles',
    group    = 'FAC',
    value    = Prms.si_systematic_normal_6_pole_error_tolerance_for_dipoles,
    symbol   = r'<math>M_{B_2/B_0,DIP}^{\text{sys,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for dipoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring systematic normal 8-pole error tolerance for dipoles',
    group    = 'FAC',
    value    = Prms.si_systematic_normal_8_pole_error_tolerance_for_dipoles,
    symbol   = r'<math>M_{B_3/B_0,DIP}^{\text{sys,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for dipoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                                    
  Parameter(
    name     = 'Storage ring systematic normal 10-pole error tolerance for dipoles',
    group    = 'FAC',
    value    = Prms.si_systematic_normal_10_pole_error_tolerance_for_dipoles,
    symbol   = r'<math>M_{B_4/B_0,DIP}^{\text{sys,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for dipoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
   
  Parameter(
    name     = 'Storage ring systematic normal 12-pole error tolerance for dipoles',
    group    = 'FAC',
    value    = Prms.si_systematic_normal_12_pole_error_tolerance_for_dipoles,
    symbol   = r'<math>M_{B_5/B_0,DIP}^{\text{sys,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for dipoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
            
  Parameter(
    name     = 'Storage ring systematic normal 14-pole error tolerance for dipoles',
    group    = 'FAC',
    value    = Prms.si_systematic_normal_14_pole_error_tolerance_for_dipoles,
    symbol   = r'<math>M_{B_6/B_0,DIP}^{\text{sys,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for dipoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random normal 6-pole error tolerance for dipoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_6_pole_error_tolerance_for_dipoles,
    symbol   = r'<math>M_{B_2/B_0,DIP}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for dipoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random normal 8-pole error tolerance for dipoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_8_pole_error_tolerance_for_dipoles,
    symbol   = r'<math>M_{B_3/B_0,DIP}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for dipoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                                    
  Parameter(
    name     = 'Storage ring random normal 10-pole error tolerance for dipoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_10_pole_error_tolerance_for_dipoles,
    symbol   = r'<math>M_{B_4/B_0,DIP}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for dipoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
   
  Parameter(
    name     = 'Storage ring random normal 12-pole error tolerance for dipoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_12_pole_error_tolerance_for_dipoles,
    symbol   = r'<math>M_{B_5/B_0,DIP}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for dipoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
            
  Parameter(
    name     = 'Storage ring random normal 14-pole error tolerance for dipoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_14_pole_error_tolerance_for_dipoles,
    symbol   = r'<math>M_{B_6/B_0,DIP}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for dipoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random normal 16-pole error tolerance for dipoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_16_pole_error_tolerance_for_dipoles,
    symbol   = r'<math>M_{B_7/B_0,DIP}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for dipoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                                 
  Parameter(
    name     = 'Storage ring random normal 18-pole error tolerance for dipoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_18_pole_error_tolerance_for_dipoles,
    symbol   = r'<math>M_{B_8/B_0,DIP}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for dipoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random skew 6-pole error tolerance for dipoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_6_pole_error_tolerance_for_dipoles,
    symbol   = r'<math>M_{B_2/B_0,DIP}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for dipoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random skew 8-pole error tolerance for dipoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_8_pole_error_tolerance_for_dipoles,
    symbol   = r'<math>M_{B_3/B_0,DIP}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for dipoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                                    
  Parameter(
    name     = 'Storage ring random skew 10-pole error tolerance for dipoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_10_pole_error_tolerance_for_dipoles,
    symbol   = r'<math>M_{B_4/B_0,DIP}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for dipoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
   
  Parameter(
    name     = 'Storage ring random skew 12-pole error tolerance for dipoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_12_pole_error_tolerance_for_dipoles,
    symbol   = r'<math>M_{B_5/B_0,DIP}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for dipoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
            
  Parameter(
    name     = 'Storage ring random skew 14-pole error tolerance for dipoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_14_pole_error_tolerance_for_dipoles,
    symbol   = r'<math>M_{B_6/B_0,DIP}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for dipoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random skew 16-pole error tolerance for dipoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_16_pole_error_tolerance_for_dipoles,
    symbol   = r'<math>M_{B_7/B_0,DIP}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for dipoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                                 
  Parameter(
    name     = 'Storage ring random skew 18-pole error tolerance for dipoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_18_pole_error_tolerance_for_dipoles,
    symbol   = r'<math>M_{B_8/B_0,DIP}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for dipoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
        
  Parameter(
    name     = 'Storage ring reference position for multipole contribution for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_reference_position_for_multipole_contribution_for_quadrupoles,
    symbol   = r'<math>r_{0,\text{QUAD}}</math>',
    units    = 'mm',
    deps     = [],
    obs      = [],
  ),
                       
  Parameter(
    name     = 'Storage ring systematic normal 6-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_systematic_normal_6_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_2/B_0,QUAD}^{\text{sys,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring systematic normal 8-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_systematic_normal_8_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_3/B_0,QUAD}^{\text{sys,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring systematic normal 10-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_systematic_normal_10_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_4/B_0,QUAD}^{\text{sys,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
    
  Parameter(
    name     = 'Storage ring systematic normal 12-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_systematic_normal_12_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_5/B_0,QUAD}^{\text{sys,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),              
                  
  Parameter(
    name     = 'Storage ring systematic normal 20-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_systematic_normal_20_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_9/B_0,QUAD}^{\text{sys,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
               
  Parameter(
    name     = 'Storage ring random normal 6-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_6_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_2/B_0,QUAD}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random normal 8-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_8_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_3/B_0,QUAD}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                                    
  Parameter(
    name     = 'Storage ring random normal 10-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_10_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_4/B_0,QUAD}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
   
  Parameter(
    name     = 'Storage ring random normal 12-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_12_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_5/B_0,QUAD}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
            
  Parameter(
    name     = 'Storage ring random normal 14-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_14_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_6/B_0,QUAD}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random normal 16-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_16_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_7/B_0,QUAD}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                                 
  Parameter(
    name     = 'Storage ring random normal 18-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_18_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_8/B_0,QUAD}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random normal 20-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_20_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_9/B_0,QUAD}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random skew 6-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_6_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_2/B_0,QUAD}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random skew 8-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_8_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_3/B_0,QUAD}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                                    
  Parameter(
    name     = 'Storage ring random skew 10-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_10_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_4/B_0,QUAD}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
   
  Parameter(
    name     = 'Storage ring random skew 12-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_12_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_5/B_0,QUAD}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
            
  Parameter(
    name     = 'Storage ring random skew 14-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_14_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_6/B_0,QUAD}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random skew 16-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_16_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_7/B_0,QUAD}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                                 
  Parameter(
    name     = 'Storage ring random skew 18-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_18_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_8/B_0,QUAD}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random skew 20-pole error tolerance for quadrupoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_20_pole_error_tolerance_for_quadrupoles,
    symbol   = r'<math>M_{B_9/B_0,QUAD}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for quadrupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),               
                                                          
  Parameter(
    name     = 'Storage ring reference position for multipole contribution for sextupoles',
    group    = 'FAC',
    value    = Prms.si_reference_position_for_multipole_contribution_for_sextupoles,
    symbol   = r'<math>r_{0,\text{SEXT}}</math>',
    units    = 'mm',
    deps     = [],
    obs      = [],
  ), 
                  
  Parameter(
    name     = 'Storage ring systematic normal 18-pole error tolerance for sextupoles',
    group    = 'FAC',
    value    = Prms.si_systematic_normal_18_pole_error_tolerance_for_sextupoles,
    symbol   = r'<math>M_{B_8/B_0,SEXT}^{\text{sys,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for sextupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
        
  Parameter(
    name     = 'Storage ring systematic normal 30-pole error tolerance for sextupoles',
    group    = 'FAC',
    value    = Prms.si_systematic_normal_30_pole_error_tolerance_for_sextupoles,
    symbol   = r'<math>M_{B_14/B_0,SEXT}^{\text{sys,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for sextupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),  
                  
  Parameter(
    name     = 'Storage ring random normal 8-pole error tolerance for sextupoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_8_pole_error_tolerance_for_sextupoles,
    symbol   = r'<math>M_{B_3/B_0,SEXT}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for sextupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ), 
                  
  Parameter(
    name     = 'Storage ring random normal 10-pole error tolerance for sextupoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_10_pole_error_tolerance_for_sextupoles,
    symbol   = r'<math>M_{B_4/B_0,SEXT}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for sextupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random normal 12-pole error tolerance for sextupoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_12_pole_error_tolerance_for_sextupoles,
    symbol   = r'<math>M_{B_5/B_0,SEXT}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for sextupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ), 
   
  Parameter(
    name     = 'Storage ring random normal 14-pole error tolerance for sextupoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_14_pole_error_tolerance_for_sextupoles,
    symbol   = r'<math>M_{B_6/B_0,SEXT}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for sextupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random normal 16-pole error tolerance for sextupoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_16_pole_error_tolerance_for_sextupoles,
    symbol   = r'<math>M_{B_7/B_0,SEXT}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for sextupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random normal 18-pole error tolerance for sextupoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_18_pole_error_tolerance_for_sextupoles,
    symbol   = r'<math>M_{B_8/B_0,SEXT}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for sextupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random normal 20-pole error tolerance for sextupoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_20_pole_error_tolerance_for_sextupoles,
    symbol   = r'<math>M_{B_9/B_0,SEXT}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for sextupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
        
  Parameter(
    name     = 'Storage ring random normal 22-pole error tolerance for sextupoles',
    group    = 'FAC',
    value    = Prms.si_random_normal_22_pole_error_tolerance_for_sextupoles,
    symbol   = r'<math>M_{B_9/B_0,SEXT}^{\text{rnd,normal}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for sextupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
  
  Parameter(
    name     = 'Storage ring random skew 8-pole error tolerance for sextupoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_8_pole_error_tolerance_for_sextupoles,
    symbol   = r'<math>M_{B_3/B_0,SEXT}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for sextupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ), 
                  
  Parameter(
    name     = 'Storage ring random skew 10-pole error tolerance for sextupoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_10_pole_error_tolerance_for_sextupoles,
    symbol   = r'<math>M_{B_4/B_0,SEXT}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for sextupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random skew 12-pole error tolerance for sextupoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_12_pole_error_tolerance_for_sextupoles,
    symbol   = r'<math>M_{B_5/B_0,SEXT}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for sextupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ), 
   
  Parameter(
    name     = 'Storage ring random skew 14-pole error tolerance for sextupoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_14_pole_error_tolerance_for_sextupoles,
    symbol   = r'<math>M_{B_6/B_0,SEXT}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for sextupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random skew 16-pole error tolerance for sextupoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_16_pole_error_tolerance_for_sextupoles,
    symbol   = r'<math>M_{B_7/B_0,SEXT}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for sextupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random skew 18-pole error tolerance for sextupoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_18_pole_error_tolerance_for_sextupoles,
    symbol   = r'<math>M_{B_8/B_0,SEXT}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for sextupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name     = 'Storage ring random skew 20-pole error tolerance for sextupoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_20_pole_error_tolerance_for_sextupoles,
    symbol   = r'<math>M_{B_9/B_0,SEXT}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for sextupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
        
  Parameter(
    name     = 'Storage ring random skew 22-pole error tolerance for sextupoles',
    group    = 'FAC',
    value    = Prms.si_random_skew_22_pole_error_tolerance_for_sextupoles,
    symbol   = r'<math>M_{B_9/B_0,SEXT}^{\text{rnd,skew}}</math>',
    units    = '',
    deps     = ['Storage ring reference position for multipole contribution for sextupoles'],
    obs      = [r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
  
                                    
   
  
]
