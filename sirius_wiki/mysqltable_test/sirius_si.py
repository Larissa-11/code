# -*- coding: utf-8 -*-

from parameter import Parameter
from definitions import ParameterDefinitions as Prms

label = 'SI'

parameter_list = [
        
  Parameter(name='SI lattice version',       group='FAC', value=Prms.si_lattice_version, symbol='', units='', deps=[], obs=[], ),
  Parameter(name='SI lattice type',          group='FAC', value=Prms.si_lattice_type, symbol='', units='', deps=['SI lattice version'], obs=[], ),
  Parameter(name='SI lattice circumference', group='GIA', value=Prms.si_lattice_circumference, symbol=r'<math>C</math>', units='m', deps=[], obs=[], ),
  Parameter(name='SI lattice symmetry',      group='FAC', value=Prms.si_lattice_symmetry, symbol=r'<math>N_\text{SUPERCELLS}</math>', units='', deps=[], obs=[], ),
  Parameter(name='SI lattice long straight section number',  group='FAC', value=Prms.si_lattice_long_straight_section_number, symbol=r'<math>N_\text{lss}</math>', units='', deps=[], obs=[], ),
  Parameter(name='SI lattice short straight section number', group='FAC', value=Prms.si_lattice_short_straight_section_number, symbol=r'<math>N_\text{sss}</math>', units='', deps=[], obs=[], ),            
  Parameter(name='SI lattice long straight section length',  group='FAC', value=Prms.si_lattice_long_straight_section_length, symbol=r'<math>L_\text{lss}</math>', units='', deps=[], obs=[], ),
  Parameter(name='SI lattice short straight section length', group='FAC', value=Prms.si_lattice_short_straight_section_length, symbol=r'<math>L_\text{sss}</math>',  units='', deps=[], obs=[], ),

  Parameter(name='SI beam energy',            group='GIA', value=Prms.si_beam_energy, symbol=r'<math>E</math>', units='GeV', deps=[], obs=[], ),
  Parameter(name='SI beam gamma factor',      group='FAC', value=Prms.si_beam_gamma_factor, symbol=r'<math>\gamma</math>', units='', deps=['SI beam energy'], obs=[], ),
  Parameter(name='SI beam beta factor',       group='FAC', value=Prms.si_beam_beta_factor, symbol=r'<math>\beta</math>', units='', deps=['SI beam gamma factor'], obs=[], ),
  Parameter(name='SI beam velocity',          group='FAC', value=Prms.si_beam_velocity, symbol=r'<math>v</math>', units='m/s', deps=['SI beam beta factor'], obs=[], ),
  Parameter(name='SI beam magnetic rigidity', group='FAC', value=Prms.si_beam_magnetic_rigidity, symbol=r'<math>(B\rho)</math>', units=unicode('T·m', encoding='utf-8'), deps=['SI beam energy'], obs=[r'<math>(B\rho) = \frac{p}{ec} = \frac{E}{ec^2}</math>'], ),                 
  Parameter(name='SI beam current',           group='FAC', value=Prms.si_beam_current, symbol=r'<math>I</math>', units='mA', deps=[], obs=[], ),
  Parameter(name='SI beam revolution period',    group='FAC', value=Prms.si_beam_revolution_period, symbol=r'<math>T_\text{rev}</math>', units=unicode('μs',encoding='utf-8'), deps=['SI lattice circumference', 'SI beam velocity'], obs=[], ),
  Parameter(name='SI beam revolution frequency', group='FAC', value=Prms.si_beam_revolution_frequency, symbol=r'<math>f_\text{rev}</math>', units='MHz', deps=['SI beam revolution period'], obs=[], ),
  Parameter(name='SI beam electron number',      group='FAC', value=Prms.si_beam_electron_number, symbol=r'<math>N</math>', units='', deps=['SI beam current', 'SI beam revolution period'], obs=[], ),

  Parameter(name='SI rf harmonic number', group='FAC', value=Prms.si_rf_harmonic_number, symbol=r'<math>h</math>', units='', deps=[], obs=[], ),
  Parameter(name='SI rf frequency',              group='FAC', value=Prms.si_rf_frequency, symbol=r'<math>f_\text{rf}</math>', units='MHz', deps=['SI beam revolution frequency', 'SI rf harmonic number'], obs=[], ),
  Parameter(name='SI rf peak voltage',    group='FAC', value=Prms.si_rf_peak_voltage, symbol=r'<math>V_\text{RF}</math>', units='MV', deps=[], obs=[], ),

  Parameter(name='SI magnet dipole b1 number', group='FAC', value=Prms.si_magnet_dipole_b1_number, symbol=r'<math>N_\text{b1}</math>', units='', deps=[], obs=[], ),
  Parameter(name='SI magnet dipole b1 deflection angle', group='FAC', value=Prms.si_magnet_dipole_b1_deflection_angle, symbol=r'<math>\theta_\text{b1}</math>', units=unicode('°',encoding='utf-8'), deps=[], obs=[], ),
  Parameter(name='SI magnet dipole b1 hardedge length', group='FAC', value=Prms.si_magnet_dipole_b1_hardedge_length, symbol=r'<math>L_\text{b1}</math>', units='m', deps=[], obs=[], ),  
  Parameter(name='SI magnet dipole b1 hardedge bending radius', group='FAC', value=Prms.si_magnet_dipole_b1_hardedge_bending_radius, symbol=r'<math>\rho_\text{b1}</math>', units='m', deps=['SI magnet dipole b1 hardedge length', 'SI magnet dipole b1 deflection angle'], obs=[r'<math>\rho_\text{b1} = \frac{L_\text{b1}}{\theta_\text{b1}}</math>'], ),
  Parameter(name='SI magnet dipole b1 hardedge sagitta', group='FAC', value=Prms.si_magnet_dipole_b1_hardedge_sagitta, symbol=r'<math>S_\text{sag, b1}</math>', units='mm', deps=['SI magnet dipole b1 hardedge bending radius', 'SI magnet dipole b1 deflection angle'], obs=[r'<math>S_\text{sag, b1} = \rho_\text{b1} (1 - \cos \theta_\text{b1} / 2)</math>'],),
  Parameter(name='SI magnet dipole b1 hardedge magnetic field', group='FAC', value=Prms.si_magnet_dipole_b1_hardedge_magnetic_field, symbol=r'<math>B_\text{b1}</math>', units='T', deps=['SI beam magnetic rigidity', 'SI magneti dipole b1 hardedge bending radius'], obs=[r'<math>B_\text{b1} = \frac{(B\rho)}{\rho_\text{b1}}</math>'], ),
  Parameter(name='SI magnet dipole b1 hardedge critical energy', group='FAC', value=Prms.si_magnet_dipole_b1_hardedge_critical_energy, symbol=r'<math>\epsilon_\text{c,b1}</math>', units='keV', deps=['SI beam gamma factor', 'SI magnet dipole b1 hardedge bending radius'], obs=[r'<math>\epsilon_\text{c,b1} = \frac{3}{2} \hbar c \frac{\gamma^3}{\rho_\text{b1}}</math>'], ),

  Parameter(name='SI magnet dipole b2 number', group='FAC', value=Prms.si_magnet_dipole_b2_number, symbol=r'<math>N_\text{b2}</math>', units='', deps=[], obs=[], ),  
  Parameter(name='SI magnet dipole b2 deflection angle', group='FAC', value=Prms.si_magnet_dipole_b2_deflection_angle, symbol=r'<math>\theta_\text{b2}</math>', units=unicode('°',encoding='utf-8'), deps=[], obs=[], ),
  Parameter(name='SI magnet dipole b2 hardedge length', group='FAC', value=Prms.si_magnet_dipole_b2_hardedge_length, symbol=r'<math>L_\text{b2}</math>', units='m', deps=[], obs=[], ),  
  Parameter(name='SI magnet dipole b2 hardedge bending radius', group='FAC', value=Prms.si_magnet_dipole_b2_hardedge_bending_radius, symbol=r'<math>\rho_\text{b2}</math>', units='m', deps=['SI magnet dipole b2 hardedge length', 'SI magnet dipole b2 deflection angle'], obs=[r'<math>\rho_\text{b2} = \frac{L_\text{b2}}{\theta_\text{b2}}</math>'], ),
  Parameter(name='SI magnet dipole b2 hardedge sagitta', group='FAC', value=Prms.si_magnet_dipole_b2_hardedge_sagitta, symbol=r'<math>S_\text{sag, b2}</math>', units='mm', deps=['SI magnet dipole b2 hardedge bending radius', 'SI magnet dipole b2 deflection angle'], obs=[r'<math>S_\text{sag, b2} = \rho_\text{b2} (1 - \cos \theta_\text{b2} / 2)</math>'],),
  Parameter(name='SI magnet dipole b2 hardedge magnetic field', group='FAC', value=Prms.si_magnet_dipole_b2_hardedge_magnetic_field, symbol=r'<math>B_\text{b2}</math>', units='T', deps=['SI beam magnetic rigidity', 'SI magneti dipole b2 hardedge bending radius'], obs=[r'<math>B_\text{b2} = \frac{(B\rho)}{\rho_\text{b2}}</math>'], ),
  Parameter(name='SI magnet dipole b2 hardedge critical energy', group='FAC', value=Prms.si_magnet_dipole_b2_hardedge_critical_energy, symbol=r'<math>\epsilon_\text{c,b2}</math>', units='keV', deps=['SI beam gamma factor', 'SI magnet dipole b2 hardedge bending radius'], obs=[r'<math>\epsilon_\text{c,b2} = \frac{3}{2} \hbar c \frac{\gamma^3}{\rho_\text{b2}}</math>'], ),

  Parameter(name='SI magnet dipole b3 number', group='FAC', value=Prms.si_magnet_dipole_b3_number, symbol=r'<math>N_\text{b3}</math>', units='', deps=[], obs=[], ),  
  Parameter(name='SI magnet dipole b3 deflection angle', group='FAC', value=Prms.si_magnet_dipole_b3_deflection_angle, symbol=r'<math>\theta_\text{b3}</math>', units=unicode('°',encoding='utf-8'), deps=[], obs=[], ),
  Parameter(name='SI magnet dipole b3 hardedge length', group='FAC', value=Prms.si_magnet_dipole_b3_hardedge_length, symbol=r'<math>L_\text{b3}</math>', units='m', deps=[], obs=[], ),  
  Parameter(name='SI magnet dipole b3 hardedge bending radius', group='FAC', value=Prms.si_magnet_dipole_b3_hardedge_bending_radius, symbol=r'<math>\rho_\text{b3}</math>', units='m', deps=['SI magnet dipole b3 hardedge length', 'SI magnet dipole b3 deflection angle'], obs=[r'<math>\rho_\text{b3} = \frac{L_\text{b3}}{\theta_\text{b3}}</math>'], ),
  Parameter(name='SI magnet dipole b3 hardedge sagitta', group='FAC', value=Prms.si_magnet_dipole_b3_hardedge_sagitta, symbol=r'<math>S_\text{sag, b3}</math>', units='mm', deps=['SI magnet dipole b3 hardedge bending radius', 'SI magnet dipole b3 deflection angle'], obs=[r'<math>S_\text{sag, b3} = \rho_\text{b3} (1 - \cos \theta_\text{b3} / 2)</math>'],),
  Parameter(name='SI magnet dipole b3 hardedge magnetic field', group='FAC', value=Prms.si_magnet_dipole_b3_hardedge_magnetic_field, symbol=r'<math>B_\text{b3}</math>', units='T', deps=['SI beam magnetic rigidity', 'SI magneti dipole b3 hardedge bending radius'], obs=[r'<math>B_\text{b3} = \frac{(B\rho)}{\rho_\text{b3}}</math>'], ),
  Parameter(name='SI magnet dipole b3 hardedge critical energy', group='FAC', value=Prms.si_magnet_dipole_b3_hardedge_critical_energy, symbol=r'<math>\epsilon_\text{c,b3}</math>', units='keV', deps=['SI beam gamma factor', 'SI magnet dipole b3 hardedge bending radius'], obs=[r'<math>\epsilon_\text{c,b3} = \frac{3}{2} \hbar c \frac{\gamma^3}{\rho_\text{b3}}</math>'], ),

  Parameter(name='SI magnet dipole bc number', group='FAC', value=Prms.si_magnet_dipole_bc_number, symbol=r'<math>N_\text{bc}</math>', units='', deps=[], obs=[], ),  
  Parameter(name='SI magnet dipole bc deflection angle', group='FAC', value=Prms.si_magnet_dipole_bc_deflection_angle, symbol=r'<math>\theta_\text{bc}</math>', units=unicode('°',encoding='utf-8'), deps=[], obs=[], ),
  Parameter(name='SI magnet dipole bc hardedge length', group='FAC', value=Prms.si_magnet_dipole_bc_hardedge_length, symbol=r'<math>L_\text{bc}</math>', units='m', deps=[], obs=[], ),  
  Parameter(name='SI magnet dipole bc hardedge bending radius', group='FAC', value=Prms.si_magnet_dipole_bc_hardedge_bending_radius, symbol=r'<math>\rho_\text{bc}</math>', units='m', deps=['SI magnet dipole bc hardedge length', 'SI magnet dipole bc deflection angle'], obs=[r'<math>\rho_\text{bc} = \frac{L_\text{bc}}{\theta_\text{bc}}</math>'], ),
  Parameter(name='SI magnet dipole bc hardedge sagitta', group='FAC', value=Prms.si_magnet_dipole_bc_hardedge_sagitta, symbol=r'<math>S_\text{sag, bc}</math>', units='mm', deps=['SI magnet dipole bc hardedge bending radius', 'SI magnet dipole bc deflection angle'], obs=[r'<math>S_\text{sag, bc} = \rho_\text{bc} (1 - \cos \theta_\text{bc} / 2)</math>'],),
  Parameter(name='SI magnet dipole bc hardedge magnetic field', group='FAC', value=Prms.si_magnet_dipole_bc_hardedge_magnetic_field, symbol=r'<math>B_\text{bc}</math>', units='T', deps=['SI beam magnetic rigidity', 'SI magneti dipole bc hardedge bending radius'], obs=[r'<math>B_\text{bc} = \frac{(B\rho)}{\rho_\text{bc}}</math>'], ),
  Parameter(name='SI magnet dipole bc hardedge critical energy', group='FAC', value=Prms.si_magnet_dipole_bc_hardedge_critical_energy, symbol=r'<math>\epsilon_\text{c,bc}</math>', units='keV', deps=['SI beam gamma factor', 'SI magnet dipole bc hardedge bending radius'], obs=[r'<math>\epsilon_\text{c,bc} = \frac{3}{2} \hbar c \frac{\gamma^3}{\rho_\text{bc}}</math>'], ),

  Parameter(name='SI bpm number',        group='FAC', value=Prms.si_bpm_number, symbol=r'<math>N_\text{bpm}</math>', units='', deps=[], obs=[]),

  Parameter(name='SI magnet chs number', group='FAC', value=Prms.si_magnet_chs_number, symbol=r'<math>N_\text{chs}</math>', units='', deps=[], obs=[]),                  
  Parameter(name='SI magnet cvs number', group='FAC', value=Prms.si_magnet_cvs_number, symbol=r'<math>N_\text{cvs}</math>', units='', deps=[], obs=[]),
  Parameter(name='SI magnet chf number', group='FAC', value=Prms.si_magnet_chf_number, symbol=r'<math>N_\text{chf}</math>', units='', deps=[], obs=[]),
  Parameter(name='SI magnet cvf number', group='FAC', value=Prms.si_magnet_cvf_number, symbol=r'<math>N_\text{cvf}</math>', units='', deps=[], obs=[]),
  Parameter(name='SI magnet qs number',  group='FAC', value=Prms.si_magnet_qs_number,  symbol=r'<math>N_\text{qs}</math>',  units='', deps=[], obs=[]),
  Parameter(name='SI magnet chs maximum strength', group='FAC', value=Prms.si_magnet_chs_maximum_strength, symbol=r'<math>\theta_\text{max,chs}</math>', units=unicode('μrad', encoding='utf-8'), deps=[], obs=[]), 
  Parameter(name='SI magnet cvs maximum strength', group='FAC', value=Prms.si_magnet_cvs_maximum_strength, symbol=r'<math>\theta_\text{max,cvs}</math>', units=unicode('μrad', encoding='utf-8'), deps=[], obs=[]),       
  Parameter(name='SI magnet chf maximum strength', group='FAC', value=Prms.si_magnet_chf_maximum_strength, symbol=r'<math>\theta_\text{max,chf}</math>', units=unicode('μrad', encoding='utf-8'), deps=[], obs=[]), 
  Parameter(name='SI magnet cvf maximum strength', group='FAC', value=Prms.si_magnet_cvf_maximum_strength, symbol=r'<math>\theta_\text{max,cvf}</math>', units=unicode('μrad', encoding='utf-8'), deps=[], obs=[]),
  Parameter(name='SI magnet qs maximum strength',  group='FAC', value=Prms.si_magnet_qs_maximum_strength,  symbol=r'<math>\theta_\text{max,qs}</math>',  units='m<sup>-1</sup>', deps=[], obs=[]),
 
  Parameter(name='SI optics default mode', group='FAC', value=Prms.si_optics_default_mode, symbol='', units='', deps=['SI lattice version'], obs=[], ),
  Parameter(name='SI optics tune horizontal', group='FAC', value=Prms.si_optics_tune_horizontal, symbol=r'<math>\nu_x</math>', units='', deps=['SI optics default mode'], obs=[], ),
  Parameter(name='SI optics tune vertical',   group='FAC', value=Prms.si_optics_tune_vertical,   symbol=r'<math>\nu_y</math>', units='', deps=['SI optics default mode'], obs=[], ),     
  Parameter(name='SI optics tune synchrotron dipole', group='FAC', value=Prms.si_optics_tune_synchrotron_dipole, symbol=r'<math>\nu_{s,\text{dip}}</math>', units='', deps=['SI optics mode'], obs=[], ),
  Parameter(name='SI optics tune synchrotron',        group='FAC', value=Prms.si_optics_tune_synchrotron, symbol=r'<math>\nu_{s}</math>', units='', deps=['SI optics mode'], obs=[], ),
  Parameter(name='SI optics betatron frequency horizontal', group='FAC', value=Prms.si_optics_betatron_frequency_horizontal, symbol=r'<math>f_x</math>', units='kHz', deps=['SI beam revolution frequency', 'SI optics tune horizontal'], obs=[r'<math>f_x = f_\text{rev} \left( \nu_x - \lfloor \nu_x\rfloor \right)</math>'], ),
  Parameter(name='SI optics betatron frequency vertical', group='FAC', value=Prms.si_optics_betatron_frequency_vertical, symbol=r'<math>f_y</math>', units='kHz', deps=['SI beam revolution frequency', 'SI optics tune vertical'], obs=[r'<math>f_y = f_\text{rev} \left( \nu_y - \lfloor \nu_y\rfloor \right)</math>'], ),
  Parameter(name='SI optics synchrotron frequency', group='FAC', value=Prms.si_optics_synchrotron_frequency, symbol=r'<math>f_{s}</math>', units='kHz', deps=['SI beam revolution frequency', 'SI optics synchrotron tune'], obs=[r'<math>f_{s} = f_\text{rev} \nu_{s}</math>'], ),  
 
  Parameter(name='SI optics natural chromaticity horizontal', group='FAC', value=Prms.si_optics_natural_chromaticity_horizontal, symbol=r'<math>\xi_{0, x}</math>', units='', deps=['SI optics mode'], obs=[], ),
  Parameter(name='SI optics chromaticity horizontal', group='FAC', value=Prms.si_optics_chromaticity_horizontal, symbol=r'<math>\xi_{x}</math>', units='', deps=['SI optics mode'], obs=[], ),
  Parameter(name='SI optics natural chromaticity vertical', group='FAC', value=Prms.si_optics_natural_chromaticity_vertical, symbol=r'<math>\xi_{0, y}</math>', units='', deps=['SI optics mode'], obs=[], ),
  Parameter(name='SI optics chromaticity vertical', group='FAC', value=Prms.si_optics_chromaticity_vertical, symbol=r'<math>\xi_{y}</math>', units='', deps=['SI optics mode'], obs=[], ),
  Parameter(name='SI optics beam size horizontal long straight section',  group='FAC', value=Prms.si_optics_beam_size_horizontal_long_straight_section,  symbol=r'<math>\sigma_\text{x, lss}</math>', units=unicode('μm',encoding='utf-8'), deps=['SI optics default mode'], obs=[r'<math>\sigma_\text{x, lss} = \sqrt{\epsilon_x \beta_{x, \text{lss}} + \left(\sigma_\delta \eta_{x, \text{lss}}\right)^2}</math>'], ),
  Parameter(name='SI optics beam size horizontal short straight section', group='FAC', value=Prms.si_optics_beam_size_horizontal_short_straight_section, symbol=r'<math>\sigma_\text{x, sss}</math>', units=unicode('μm',encoding='utf-8'), deps=['SI optics default mode'], obs=[r'<math>\sigma_\text{x, sss} = \sqrt{\epsilon_x \beta_{x, \text{sss}} + \left(\sigma_\delta \eta_{x, \text{sss}}\right)^2}</math>'], ),
  Parameter(name='SI optics beam size horizontal dipole bc',              group='FAC', value=Prms.si_optics_beam_size_horizontal_dipole_bc, symbol=r'<math>\sigma_\text{x, bc}</math>', units=unicode('μm',encoding='utf-8'), deps=['SI optics default mode'], obs=[r'<math>\sigma_\text{x, bc} = \sqrt{\epsilon_x \beta_{x, \text{bc}} + \left(\sigma_\delta \eta_{x, \text{bc}}\right)^2}</math>'], ),
  Parameter(name='SI optics beam size vertical long straight section',  group='FAC', value=Prms.si_optics_beam_size_vertical_long_straight_section,  symbol=r'<math>\sigma_\text{y, lss}</math>', units=unicode('μm',encoding='utf-8'), deps=['SI optics default mode'], obs=[r'<math>\sigma_\text{y, lss} = \sqrt{\epsilon_y \beta_{y, \text{lss}} + \left(\sigma_\delta \eta_{y, \text{lss}}\right)^2}</math>'], ),
  Parameter(name='SI optics beam size vertical short straight section', group='FAC', value=Prms.si_optics_beam_size_vertical_short_straight_section, symbol=r'<math>\sigma_\text{y, sss}</math>', units=unicode('μm',encoding='utf-8'), deps=['SI optics default mode'], obs=[r'<math>\sigma_\text{y, sss} = \sqrt{\epsilon_y \beta_{y, \text{sss}} + \left(\sigma_\delta \eta_{y, \text{sss}}\right)^2}</math>'], ),
  Parameter(name='SI optics beam size vertical dipole bc',              group='FAC', value=Prms.si_optics_beam_size_vertical_dipole_bc, symbol=r'<math>\sigma_\text{y, bc}</math>', units=unicode('μm',encoding='utf-8'), deps=['SI optics default mode'], obs=[r'<math>\sigma_\text{y, bc} = \sqrt{\epsilon_y \beta_{y, \text{bc}} + \left(\sigma_\delta \eta_{y, \text{bc}}\right)^2}</math>'], ),
  Parameter(name='SI optics beam divergence horizontal long straight section',  group='FAC', value=Prms.si_optics_beam_divergence_horizontal_long_straight_section,  symbol=r"<math>\sigma_\text{x', lss}</math>", units=unicode('μrad',encoding='utf-8'), deps=['SI optics default mode'], obs=[r"<math>\sigma_\text{x', lss} = \sqrt{\epsilon_x \gamma_{x, \text{lss}} + \left(\sigma_\delta \eta'_{x, \text{lss}}\right)^2}</math>"], ),
  Parameter(name='SI optics beam divergence horizontal short straight section', group='FAC', value=Prms.si_optics_beam_divergence_horizontal_short_straight_section, symbol=r"<math>\sigma_\text{x', sss}</math>", units=unicode('μrad',encoding='utf-8'), deps=['SI optics default mode'], obs=[r"<math>\sigma_\text{x', sss} = \sqrt{\epsilon_x \gamma_{x, \text{sss}} + \left(\sigma_\delta \eta'_{x, \text{sss}}\right)^2}</math>"], ),
  Parameter(name='SI optics beam divergence horizontal dipole bc',              group='FAC', value=Prms.si_optics_beam_divergence_horizontal_dipole_bc, symbol=r"<math>\sigma_\text{x', bc}</math>", units=unicode('μrad',encoding='utf-8'), deps=['SI optics default mode'], obs=[r"<math>\sigma_\text{x', bc} = \sqrt{\epsilon_x \gamma_{x, \text{bc}} + \left(\sigma_\delta \eta'_{x, \text{bc}}\right)^2}</math>"], ),
  Parameter(name='SI optics beam divergence vertical long straight section',  group='FAC', value=Prms.si_optics_beam_divergence_vertical_long_straight_section,  symbol=r"<math>\sigma_\text{y', lss}</math>", units=unicode('μrad',encoding='utf-8'), deps=['SI optics default mode'], obs=[r"<math>\sigma_\text{y', lss} = \sqrt{\epsilon_y \gamma_{y, \text{lss}} + \left(\sigma_\delta \eta'_{y, \text{lss}}\right)^2}</math>"], ),
  Parameter(name='SI optics beam divergence vertical short straight section', group='FAC', value=Prms.si_optics_beam_divergence_vertical_short_straight_section, symbol=r"<math>\sigma_\text{y', sss}</math>", units=unicode('μrad',encoding='utf-8'), deps=['SI optics default mode'], obs=[r"<math>\sigma_\text{y', sss} = \sqrt{\epsilon_y \gamma_{y, \text{sss}} + \left(\sigma_\delta \eta'_{y, \text{sss}}\right)^2}</math>"], ),
  Parameter(name='SI optics beam divergence vertical dipole bc',              group='FAC', value=Prms.si_optics_beam_divergence_vertical_dipole_bc, symbol=r"<math>\sigma_\text{y', bc}</math>", units=unicode('μrad',encoding='utf-8'), deps=['SI optics default mode'], obs=[r"<math>\sigma_\text{y', bc} = \sqrt{\epsilon_y \gamma_{y, \text{bc}} + \left(\sigma_\delta \eta'_{y, \text{bc}}\right)^2}</math>"], ),
  Parameter(name='SI optics radiation integral i1 dipole', group='FAC', value=Prms.si_optics_radiation_integral_i1_dipole, symbol=r'<math>I_\text{1,dip}</math>', units='m', deps=['SI beam magnetic rigidity', 'SI optics default mode'], obs=[r'<math>I_\text{1,dip} = \oint{\frac{\eta_x}{\rho_x}\,ds}</math>'], ),
  Parameter(name='SI optics radiation integral i2 dipole', group='FAC', value=Prms.si_optics_radiation_integral_i2_dipole, symbol=r'<math>I_\text{2,dip}</math>', units='m<sup>-1</sup>', deps=['SI beam magnetic rigidity', 'SI optics default mode'], obs=[r'<math>I_\text{2,dip} = \oint{\frac{1}{\rho_x^2}\,ds}</math>'], ),
  Parameter(name='SI optics radiation integral i3 dipole', group='FAC', value=Prms.si_optics_radiation_integral_i3_dipole, symbol=r'<math>I_\text{3,dip}</math>', units='m<sup>-2</sup>', deps=['SI beam magnetic rigidity', 'SI optics default mode'], obs=[r'<math>I_\text{3,dip} = \oint{\frac{1}{|\rho_x|^3}\,ds}</math>'], ),
  Parameter(name='SI optics radiation integral i4 dipole', group='FAC', value=Prms.si_optics_radiation_integral_i4_dipole, symbol=r'<math>I_\text{4,dip}</math>', units='m<sup>-1</sup>', deps=['SI beam magnetic rigidity', 'SI optics default mode'], obs=[r'<math>I_\text{4,dip} = \frac{\eta_x(s_0) \tan \theta(s_0)}{\rho_x^2} + \oint{\frac{\eta_x}{\rho_x^3} \left(1 + 2 \rho_x^2 k\right)\,ds} + \frac{\eta_x(s_1) \tan \theta(s_1)}{\rho_x^2}</math>'], ),
  Parameter(name='SI optics radiation integral i5 dipole', group='FAC', value=Prms.si_optics_radiation_integral_i5_dipole, symbol=r'<math>I_\text{5,dip}</math>', units='m<sup>-1</sup>', deps=['SI beam magnetic rigidity', 'SI optics default mode'], obs=[r'<math>I_\text{5,dip} = \oint{\frac{H_x}{|\rho_x|^3}\,ds}</math>', r"<math>H_x \equiv \gamma_x \eta_x^2 + 2 \alpha_x \eta_x \eta_x^' + \beta_x {\eta_x^'}^2</math>"], ),
  Parameter(name='SI optics radiation integral i6 dipole', group='FAC', value=Prms.si_optics_radiation_integral_i6_dipole, symbol=r'<math>I_\text{6,dip}</math>', units='m<sup>-1</sup>', deps=['SI beam magnetic rigidity', 'SI optics default mode'], obs=[r'<math>I_\text{6,dip} = \oint{k^2 \eta_x^2\,ds}</math>'], ),          
  Parameter(name='SI optics radiation integral i1 id', group='FAC', value=Prms.si_optics_radiation_integral_i1_id, symbol=r'<math>I_\text{1,id}</math>', units='m', deps=['SI beam magnetic rigidity', 'SI optics default mode'], obs=[r'<math>I_\text{1,id} = \oint{\frac{\eta_x}{\rho_x}\,ds}</math>'], ),
  Parameter(name='SI optics radiation integral i2 id', group='FAC', value=Prms.si_optics_radiation_integral_i2_id, symbol=r'<math>I_\text{2,id}</math>', units='m<sup>-1</sup>', deps=['SI beam magnetic rigidity', 'SI optics default mode'], obs=[r'<math>I_\text{2,id} = \oint{\frac{1}{\rho_x^2}\,ds}</math>'], ),
  Parameter(name='SI optics radiation integral i3 id', group='FAC', value=Prms.si_optics_radiation_integral_i3_id, symbol=r'<math>I_\text{3,id}</math>', units='m<sup>-2</sup>', deps=['SI beam magnetic rigidity', 'SI optics default mode'], obs=[r'<math>I_\text{3,id} = \oint{\frac{1}{|\rho_x|^3}\,ds}</math>'], ),
  Parameter(name='SI optics radiation integral i4 id', group='FAC', value=Prms.si_optics_radiation_integral_i4_id, symbol=r'<math>I_\text{4,id}</math>', units='m<sup>-1</sup>', deps=['SI beam magnetic rigidity', 'SI optics default mode'], obs=[r'<math>I_\text{4,id} = \frac{\eta_x(s_0) \tan \theta(s_0)}{\rho_x^2} + \oint{\frac{\eta_x}{\rho_x^3} \left(1 + 2 \rho_x^2 k\right)\,ds} + \frac{\eta_x(s_1) \tan \theta(s_1)}{\rho_x^2}</math>'], ),
  Parameter(name='SI optics radiation integral i5 id', group='FAC', value=Prms.si_optics_radiation_integral_i5_id, symbol=r'<math>I_\text{5,id}</math>', units='m<sup>-1</sup>', deps=['SI beam magnetic rigidity', 'SI optics default mode'], obs=[r'<math>I_\text{5,id} = \oint{\frac{H_x}{|\rho_x|^3}\,ds}</math>', r"<math>H_x \equiv \gamma_x \eta_x^2 + 2 \alpha_x \eta_x \eta_x^' + \beta_x {\eta_x^'}^2</math>"], ),
  Parameter(name='SI optics radiation integral i6 id', group='FAC', value=Prms.si_optics_radiation_integral_i6_id, symbol=r'<math>I_\text{6,id}</math>', units='m<sup>-1</sup>', deps=['SI beam magnetic rigidity', 'SI optics default mode'], obs=[r'<math>I_\text{6,id} = \oint{k^2 \eta_x^2\,ds}</math>'], ),          
  Parameter(name='SI optics radiation integral i1', group='FAC', value=Prms.si_optics_radiation_integral_i1, symbol=r'<math>I_\text{1}</math>', units='m', deps=['SI optics radiation integral i1 dipole', 'SI optics radiation integral i1 id'], obs=[r'<math>I_\text{1} = I_\text{1,dip} + I_\text{1,id}</math>'], ),
  Parameter(name='SI optics radiation integral i2', group='FAC', value=Prms.si_optics_radiation_integral_i2, symbol=r'<math>I_\text{2}</math>', units='m<sup>-1</sup>', deps=['SI optics radiation integral i2 dipole', 'SI optics radiation integral i2 id'], obs=[r'<math>I_\text{2} = I_\text{2,dip} + I_\text{2,id}</math>'], ),
  Parameter(name='SI optics radiation integral i3', group='FAC', value=Prms.si_optics_radiation_integral_i3, symbol=r'<math>I_\text{3}</math>', units='m<sup>-2</sup>', deps=['SI optics radiation integral i3 dipole', 'SI optics radiation integral i3 id'], obs=[r'<math>I_\text{3} = I_\text{3,dip} + I_\text{3,id}</math>'], ),
  Parameter(name='SI optics radiation integral i4', group='FAC', value=Prms.si_optics_radiation_integral_i4, symbol=r'<math>I_\text{4}</math>', units='m<sup>-1</sup>', deps=['SI optics radiation integral i4 dipole', 'SI optics radiation integral i4 id'], obs=[r'<math>I_\text{4} = I_\text{4,dip} + I_\text{4,id}</math>'], ),
  Parameter(name='SI optics radiation integral i5', group='FAC', value=Prms.si_optics_radiation_integral_i5, symbol=r'<math>I_\text{5}</math>', units='m<sup>-1</sup>', deps=['SI optics radiation integral i5 dipole', 'SI optics radiation integral i5 id'], obs=[r'<math>I_\text{5} = I_\text{5,dip} + I_\text{5,id}</math>'], ),
  Parameter(name='SI optics radiation integral i6', group='FAC', value=Prms.si_optics_radiation_integral_i6, symbol=r'<math>I_\text{6}</math>', units='m<sup>-1</sup>', deps=['SI optics radiation integral i6 dipole', 'SI optics radiation integral i6 id'], obs=[r'<math>I_\text{6} = I_\text{6,dip} + I_\text{6,id}</math>'], ),
  

  Parameter(name='SI optics transverse coupling', group='FAC', value=Prms.si_optics_transverse_coupling, symbol=r'<math>\kappa</math>', units='%', deps=['SI optics mode'], obs=[], ),
  
  Parameter(name='SI optics damping partition number vertical dipole', group='FAC', value=Prms.si_optics_damping_partition_number_vertical_dipole, symbol=r'<math>J_{\text{y, dip}}</math>', units='', deps=[], obs=['Vertical damping partition number is identically one for error-free machines for which vertical dispersion functions are zero everywhere.', r'<math>J_{\text{y, dip}} = 1 - \frac{I_\text{4y,dip}}{I_\text{2,dip}} \equiv 1</math>'], ),
  Parameter(name='SI optics damping partition number horizontal dipole', group='FAC', value=Prms.si_optics_damping_partition_number_horizontal_dipole, symbol=r'<math>J_{\text{x, dip}}</math>', units='', deps=['SI optics radiation integral i2 dipole', 'SI optics radiation integral i4 dipole'], obs=[r'<math>J_{\text{x, dip}} = 1 - \frac{I_\text{4,dip}}{I_\text{2,dip}}</math>'], ),
  Parameter(name='SI optics damping partition number longitudinal dipole', group='FAC', value=Prms.si_optics_damping_partition_number_longitudinal_dipole, symbol=r'<math>J_{\text{s, dip}}</math>', units='', deps=[], obs=["Its value is derived from Robinson's sum rule.", r'<math>J_{\text{s},\text{dip}} = 2 + \frac{I_{\text{4},\text{dip}}}{I_{\text{2},\text{dip}}}</math>', 'Vertical damping partition number dipole is identically one for error-free machines for which vertical dispersion functions are zero everywhere.'], ),
  Parameter(name='SI optics energy loss per turn dipole', group='FAC', value=Prms.si_optics_energy_loss_per_turn_dipole, symbol=r'<math>U_\text{0,dip}</math>',   units='keV', deps=['SI beam energy', 'SI optics radiation integral i2 dipole'], obs=[r'<math>U_\text{0,dip} = \oint{P_\gamma dt} = \frac{C_\gamma}{2\pi} E^4_0 I_\text{2,dip}</math>'], ),
  Parameter(name='SI optics radiation power dipole', group='FAC', value=Prms.si_optics_radiation_power_dipole, symbol=r'<math>P_{\text{dip}}</math>', units='kW',    deps=['SI optics energy loss per turn dipole', 'SI beam current'], obs=[r'<math>P = U_{0,\text{dip}} I</math>'], ),
  Parameter(name='SI optics overvoltage dipole', group='FAC', value=Prms.si_optics_overvoltage_dipole, symbol=r'<math>q_\text{dip}</math>', units='', deps=['SI rf peak voltage', 'SI optics energy loss per turn dipole'], obs=[r'<math>q_\text{dip} = \frac{eV_\text{RF}}{U_\text{0,dip}}</math>'], ),
  Parameter(name='SI optics synchronous phase dipole', group='FAC', value=Prms.si_optics_synchronous_phase_dipole, symbol=r'<math>\phi_0</math>', units=unicode('°',encoding='utf-8'), deps=['SI optics overvoltage dipole'], obs=[r'<math>\phi_0 = \pi - \arcsin\left(\frac{1}{q_\text{dip}}\right)</math>'], ),
  Parameter(name='SI optics linear momentum compaction dipole', group='FAC', value=Prms.si_optics_linear_momentum_compaction_dipole, symbol=r'<math>\alpha_\text{1,dip}</math>', units='', deps=['SI optics radiation integral I1 dipole', 'SI lattice circumference'], obs=[r'<math>\alpha_\text{1,dip} = \frac{I_\text{1,dip}}{C}</math>'], ),
  Parameter(name='SI optics linear slip phase dipole', group='FAC', value=Prms.si_optics_linear_slip_phase_dipole, symbol=r'<math>\eta_{1,\text{dip}}</math>', units='', deps=['SI beam gamma factor', 'SI optics linear momentum compaction dipole'], obs=[r'<math>\eta_{1,\text{dip}} = \alpha_{1,\text{dip}} - \gamma^{-2}</math>'], ),
  Parameter(name='SI optics rf energy acceptance dipole', group='FAC', value=Prms.si_optics_rf_energy_acceptance_dipole, symbol=r'<math>\epsilon_{\text{max},\text{dip}}</math>', units='%', deps=['SI beam energy', 'SI rf harmonic number', 'SI optics overvoltage dipole', 'SI optics energy loss per turn dipole', 'SI optics linear momentum compaction dipole'], obs=[r'<math>\epsilon_\text{max, dip} = \sqrt{\frac{1}{\pi h \alpha_\text{x, dip}} \frac{U_\text{0, dip}}{E} F(q_\text{dip})}</math>', r'<math>F(q) = 2 \left( \sqrt{q^2 - 1} - \cos^{-1} (1/q) \right)</math>'], ),
  Parameter(name='SI optics natural emittance dipole', group='FAC', value=Prms.si_optics_natural_emittance_dipole, symbol=r'<math>\epsilon_{0,\text{dip}}</math>', units=unicode('nm⋅rad',encoding='utf-8'), deps=['SI beam gamma factor', 'SI damping partition number horizontal dipole', 'SI optics radiation integral i5 dipole', 'SI optics radiation integral i2 dipole'], obs=[r'<math>\epsilon_{0,\text{dip}} = C_\text{q} \frac{\gamma^2}{J_\text{x,dip}} \frac{I_\text{5, dip}}{I_\text{2, dip}}</math>'], ),                
  Parameter(name='SI optics natural energy spread dipole', group='FAC', value=Prms.si_optics_natural_energy_spread_dipole, symbol=r'<math>\sigma_{\delta,\text{dip}}</math>', units='%', deps=['SI beam gamma factor', 'SI optics radiation integral i2 dipole', 'SI optics radiation integral i3 dipole', 'SI optics radiation integral i4 dipole'], obs=[r'<math>\sigma_{\delta,\text{dip}} = \sqrt{C_\text{q} \gamma^2 \frac{I_{\text{3},\text{dip}}}{2 I_{\text{2},\text{dip}} + I_{\text{4},\text{dip}}}}</math>'], ),
  Parameter(name='SI optics natural bunch length dipole', group='FAC', value=Prms.si_optics_natural_bunch_length_dipole, symbol=r'<math>\sigma_{\text{s, dip}}</math>', units='mm', deps=['SI optics linear slip phase dipole', 'SI optics natural energy spread dipole', 'SI optics synchrotron frequency'], obs=[r'<math>\sigma_{s,\text{dip}} = \frac{c|\eta_{\text{1},\text{dip}}|\sigma_{\delta,\text{dip}}}{f_{s,\text{dip}}}</math>'], ),
  Parameter(name='SI optics natural bunch duration dipole', group='FAC', value=Prms.si_optics_natural_bunch_duration_dipole, symbol=r'<math>\sigma_{\text{t, dip}}</math>', units='ps', deps=['SI optics natural bunch length dipole', 'SI beam beta factor'], obs=[r'<math>\sigma_{\text{t, dip}} = \frac{\sigma_{s,\text{dip}}}{c}</math>'], ),
  Parameter(name='SI optics radiation damping time horizontal dipole', group='FAC', value=Prms.si_optics_radiation_damping_time_horizontal_dipole, symbol=r'<math>\alpha_{\text{x, dip}}</math>', units='ms', deps=['SI beam energy', 'SI optics radiation integral i2 dipole', 'SI optics damping partition number horizontal dipole', 'SI lattice circumference'], obs=[r'<math>\alpha_{x,\text{dip}} = \frac{C_\alpha}{C} E^3 J_{x,\text{dip}}</math>'], ),
  Parameter(name='SI optics radiation damping time vertical dipole', group='FAC', value=Prms.si_optics_radiation_damping_time_vertical_dipole, symbol=r'<math>\alpha_{\text{y, dip}}</math>', units='ms', deps=['SI beam energy', 'SI optics radiation integral i2 dipole', 'SI optics damping partition number vertical dipole', 'SI lattice circumference'], obs=[r'<math>\alpha_{y,\text{dip}} = \frac{C_\alpha}{C} E^3 J_{y,\text{dip}}</math>'], ),
  Parameter(name='SI optics radiation damping time longitudinal dipole', group='FAC', value=Prms.si_optics_radiation_damping_time_longitudinal_dipole, symbol=r'<math>\alpha_{\text{s, dip}}</math>', units='ms', deps=['SI beam energy', 'SI optics radiation integral i2 dipole', 'SI optics damping partition number longitudinal dipole', 'SI lattice circumference'], obs=[r'<math>\alpha_{s,\text{dip}} = \frac{C_\alpha}{C} E^3 J_{s,\text{dip}}</math>'], ),

  Parameter(name='SI optics energy loss per turn id', group='FAC',value=Prms.si_optics_energy_loss_per_turn_id, symbol=r'<math>U_\text{0,id}</math>', units='keV', deps=['SI beam energy', 'SI optics radiation integral i2 id'], obs=[r'<math>U_\text{0,id} = \oint{P_\gamma dt} = \frac{C_\gamma}{2\pi} E^4_0 I_\text{2,id}</math>'], ),

  Parameter(name='SI optics damping partition number vertical', group='FAC', value=Prms.si_optics_damping_partition_number_vertical, symbol=r'<math>J_{\text{y}}</math>', units='', deps=[], obs=['Vertical damping partition number is identically one for error-free machines for which vertical dispersion functions are zero everywhere.', r'<math>J_{\text{y}} = 1 - \frac{I_\text{4y,dip}}{I_\text{2}} \equiv 1</math>'], ),
  Parameter(name='SI optics damping partition number horizontal', group='FAC', value=Prms.si_optics_damping_partition_number_horizontal, symbol=r'<math>J_{\text{x}}</math>', units='', deps=['SI optics radiation integral i2', 'SI optics radiation integral i4'], obs=[r'<math>J_{\text{x}} = 1 - \frac{I_\text{4}}{I_\text{2}}</math>'], ),
  Parameter(name='SI optics damping partition number longitudinal', group='FAC', value=Prms.si_optics_damping_partition_number_longitudinal, symbol=r'<math>J_{\text{s}}</math>', units='', deps=[], obs=["Its value is derived from Robinson's sum rule.", r'<math>J_{\text{s}} = 2 + \frac{I_{\text{4}}}{I_{\text{2},\text{dip}}}</math>', 'Vertical damping partition number is identically one for error-free machines for which vertical dispersion functions are zero everywhere.'], ),
  Parameter(name='SI optics energy loss per turn', group='FAC', value=Prms.si_optics_energy_loss_per_turn, symbol=r'<math>U_\text{0}</math>',   units='keV', deps=['SI beam energy', 'SI optics radiation integral i2'], obs=[r'<math>U_\text{0} = \oint{P_\gamma dt} = \frac{C_\gamma}{2\pi} E^4_0 I_\text{2}</math>'], ),
  Parameter(name='SI optics radiation power', group='FAC', value=Prms.si_optics_radiation_power, symbol=r'<math>P</math>', units='kW',    deps=['SI optics energy loss per turn', 'SI beam current'], obs=[r'<math>P = U_{0} I</math>'], ),
  Parameter(name='SI optics overvoltage', group='FAC', value=Prms.si_optics_overvoltage, symbol=r'<math>q</math>', units='', deps=['SI rf peak voltage', 'SI optics energy loss per turn'], obs=[r'<math>q_\text{dip} = \frac{eV_\text{RF}}{U_\text{0}}</math>'], ),
  Parameter(name='SI optics synchronous phase', group='FAC', value=Prms.si_optics_synchronous_phase, symbol=r'<math>\phi_0</math>', units=unicode('°',encoding='utf-8'), deps=['SI optics overvoltage'], obs=[r'<math>\phi_0 = \pi - \arcsin\left(\frac{1}{q}\right)</math>'], ),
  Parameter(name='SI optics linear momentum compaction', group='FAC', value=Prms.si_optics_linear_momentum_compaction, symbol=r'<math>\alpha_\text{1,dip}</math>', units='', deps=['SI optics radiation integral I1', 'SI lattice circumference'], obs=[r'<math>\alpha_\text{1} = \frac{I_\text{1}}{C}</math>'], ),
  Parameter(name='SI optics linear slip phase', group='FAC', value=Prms.si_optics_linear_slip_phase, symbol=r'<math>\eta_{1}</math>', units='', deps=['SI beam gamma factor', 'SI optics linear momentum compaction'], obs=[r'<math>\eta_{1} = \alpha_{1} - \gamma^{-2}</math>'], ),
  Parameter(name='SI optics rf energy acceptance', group='FAC', value=Prms.si_optics_rf_energy_acceptance, symbol=r'<math>\epsilon_{\text{max}}</math>', units='%', deps=['SI beam energy', 'SI rf harmonic number', 'SI optics overvoltage', 'SI optics energy loss per turn', 'SI optics linear momentum compaction'], obs=[r'<math>\epsilon_\text{max, dip} = \sqrt{\frac{1}{\pi h \alpha_\text{x, dip}} \frac{U_\text{0, dip}}{E} F(q)}</math>', r'<math>F(q) = 2 \left( \sqrt{q^2 - 1} - \cos^{-1} (1/q) \right)</math>'], ),
  Parameter(name='SI optics natural emittance', group='FAC', value=Prms.si_optics_natural_emittance, symbol=r'<math>\epsilon_{0}</math>', units=unicode('nm⋅rad',encoding='utf-8'), deps=['SI beam gamma factor', 'SI damping partition number horizontal', 'SI optics radiation integral i5', 'SI optics radiation integral i2'], obs=[r'<math>\epsilon_{0} = C_\text{q} \frac{\gamma^2}{J_\text{x}} \frac{I_\text{5}}{I_\text{2}}</math>'], ),                
  Parameter(name='SI optics natural energy spread', group='FAC', value=Prms.si_optics_natural_energy_spread, symbol=r'<math>\sigma_{\delta,\text{dip}}</math>', units='%', deps=['SI beam gamma factor', 'SI optics radiation integral i2', 'SI optics radiation integral i3', 'SI optics radiation integral i4'], obs=[r'<math>\sigma_{\delta,\text{dip}} = \sqrt{C_\text{q} \gamma^2 \frac{I_{\text{3},\text{dip}}}{2 I_{\text{2},\text{dip}} + I_{\text{4},\text{dip}}}}</math>'], ),
  Parameter(name='SI optics natural bunch length', group='FAC', value=Prms.si_optics_natural_bunch_length, symbol=r'<math>\sigma_{\text{s, dip}}</math>', units='mm', deps=['SI optics linear slip phase', 'SI optics natural energy spread', 'SI optics synchrotron frequency'], obs=[r'<math>\sigma_{s,\text{dip}} = \frac{c|\eta_{\text{1},\text{dip}}|\sigma_{\delta,\text{dip}}}{f_{s,\text{dip}}}</math>'], ),
  Parameter(name='SI optics natural bunch duration', group='FAC', value=Prms.si_optics_natural_bunch_duration, symbol=r'<math>\sigma_{\text{t, dip}}</math>', units='ps', deps=['SI optics natural bunch length', 'SI beam beta factor'], obs=[r'<math>\sigma_{\text{t, dip}} = \frac{\sigma_{s,\text{dip}}}{c}</math>'], ),
  Parameter(name='SI optics radiation damping time horizontal', group='FAC', value=Prms.si_optics_radiation_damping_time_horizontal, symbol=r'<math>\alpha_{\text{x, dip}}</math>', units='ms', deps=['SI beam energy', 'SI optics radiation integral i2', 'SI optics damping partition number horizontal', 'SI lattice circumference'], obs=[r'<math>\alpha_{x,\text{dip}} = \frac{C_\alpha}{C} E^3 J_{x,\text{dip}}</math>'], ),
  Parameter(name='SI optics radiation damping time vertical', group='FAC', value=Prms.si_optics_radiation_damping_time_vertical, symbol=r'<math>\alpha_{\text{y, dip}}</math>', units='ms', deps=['SI beam energy', 'SI optics radiation integral i2', 'SI optics damping partition number vertical', 'SI lattice circumference'], obs=[r'<math>\alpha_{y,\text{dip}} = \frac{C_\alpha}{C} E^3 J_{y,\text{dip}}</math>'], ),
  Parameter(name='SI optics radiation damping time longitudinal', group='FAC', value=Prms.si_optics_radiation_damping_time_longitudinal, symbol=r'<math>\alpha_{\text{s, dip}}</math>', units='ms', deps=['SI beam energy', 'SI optics radiation integral i2', 'SI optics damping partition number longitudinal', 'SI lattice circumference'], obs=[r'<math>\alpha_{s,\text{dip}} = \frac{C_\alpha}{C} E^3 J_{s,\text{dip}}</math>'], ),

]


'''
  Parameter(name='SI dipole power supplies ripple error tolerance', group='FAC', value=Prms.si_dipole_power_supplies_ripple_error_tolerance, symbol=r'<math>E_\text{ripp, dip}</math>', units='ppm', deps=[], obs=[], ),
  Parameter(name='SI quadrupole power supplies ripple error tolerance', group='FAC', value=Prms.si_quadrupole_power_supplies_ripple_error_tolerance, symbol=r'<math>E_\text{ripp, QUAD}</math>', units='ppm', deps=[], obs=[], ),
  Parameter(name='SI sextupole power supplies ripple error tolerance', group='FAC', value=Prms.si_sextupole_power_supplies_ripple_error_tolerance, symbol=r'<math>E_\text{ripp, SEXT}</math>', units='ppm', deps=[], obs=[], ),
  Parameter(name='SI dipoles vibration amplitude error tolerance', group='FAC', value=Prms.si_dipoles_vibration_amplitude_error_tolerance, symbol=r'<mat h>E_\text{vib, dip}</math>', units='nm', deps=[], obs=[], ),
  Parameter(name='SI quadrupoles vibration amplitude error tolerance', group='FAC', value=Prms.si_quadrupoles_vibration_amplitude_error_tolerance, symbol=r'<math>E_\text{vib, QUAD}</math>', units='nm', deps=[], obs=[], ),
  Parameter(name='SI sextupoles vibration amplitude error tolerance', group='FAC', value=Prms.si_sextupoles_vibration_amplitude_error_tolerance, symbol=r'<math>E_\text{vib, SEXT}</math>', units='nm', deps=[], obs=[], ),
  
  Parameter(name='SI insertion device SCW4T name', group='GIA', value=Prms.si_insertion_device_scw4t_name, symbol=r'', units='', deps=[], obs=[], ),
  Parameter(name='SI insertion device SCW4T type', group='GIA', value=Prms.si_insertion_device_scw4t_type, symbol=r'', units='', deps=[], obs=[], ),
  Parameter(name='SI insertion device SCW4T period length', group='GIA', value=Prms.si_insertion_device_scw4t_period, symbol=r'<math>\lambda_\text{SCW4T}</math>', units='mm', deps=[], obs=[], ),                   
  Parameter(name='SI insertion device SCW4T number of periods', group='GIA', value=Prms.si_insertion_device_scw4t_number_of_periods, symbol=r'<math>N_\text{p, SCW4T}</math>', units='', deps=[], obs=[], ),
  Parameter(name='SI insertion device SCW4T length', group='GIA', value=Prms.si_insertion_device_scw4t_length, symbol=r'<math>L_\text{p, SCW4T}</math>', units='cm', deps=[], obs=[], ),  
  Parameter(name='SI insertion device SCW4T minimum gap', group='GIA', value=Prms.si_insertion_device_scw4t_minimum_gap, symbol=r'<math>G_\text{min, SCW4T}</math>', units='mm', deps=[], obs=[], ),              
  Parameter(name='SI insertion device SCW4T maximum horizontal field', group='GIA', value=Prms.si_insertion_device_scw4t_maximum_horizontal_field, symbol=r'<math>B_\text{x, SCW4T}</math>', units='T', deps=[], obs=[], ),
  Parameter(name='SI insertion device SCW4T maximum vertical field', group='GIA', value=Prms.si_insertion_device_scw4t_maximum_vertical_field, symbol=r'<math>B_\text{y, SCW4T}</math>', units='T', deps=[], obs=[], ),
  Parameter(name='SI insertion device SCW4T maximum horizontal deflection parameter', group='GIA', value=Prms.si_insertion_device_scw4t_maximum_horizontal_deflection_parameter, symbol=r'<math>K_\text{x, SCW4T}</math>', units='', deps=['SI insertion device SCW4T period length', 'SI insertion device SCW4T maximum vertical field'], obs=[r'<math>K_\text{x, SCW4T} = \frac{ec B_\text{y,SCW4T} \lambda_\text{p, SCW4T}}{2 \pi E_0}</math>'], ),
  Parameter(name='SI insertion device SCW4T maximum vertical deflection parameter', group='GIA', value=Prms.si_insertion_device_scw4t_maximum_vertical_deflection_parameter, symbol=r'<math>K_\text{y, SCW4T}</math>', units='', deps=['SI insertion device SCW4T period length', 'SI insertion device SCW4T maximum horizontal field'], obs=[r'<math>K_\text{y, SCW4T} = \frac{ec B_\text{x,SCW4T} \lambda_\text{p, SCW4T}}{2 \pi E_0}</math>'], ),
  Parameter(name='SI insertion device SCW4T maximum power', group='GIA', value=Prms.si_insertion_device_scw4t_maximum_power, symbol=r'<math>P_\text{SCW4T}</math>', units='kW', deps=['SI beam energy', 'SI beam current', 'SI insertion device SCW4T period length', 'SI insertion device SCW4T number of periods', 'SI insertion device SCW4T maximum horizontal deflection parameter'], obs=[r'<math>P_\text{SCW4T} = \frac{4 \pi^2 r_e}{3 e E_0} \frac{E^2 K^2_\text{x,SCW4T} N_\text{p, SCW4T} I}{\lambda_\text{p, SCW4T}}</math>'], ), 
  Parameter(name='SI insertion device EPU80 name', group='GIA', value=Prms.si_insertion_device_epu80_name, symbol=r'', units='', deps=[], obs=[], ),
  Parameter(name='SI insertion device EPU80 type', group='GIA', value=Prms.si_insertion_device_epu80_type, symbol=r'', units='', deps=[], obs=[], ),
  Parameter(name='SI insertion device EPU80 period length', group='GIA', value=Prms.si_insertion_device_epu80_period, symbol=r'<math>\lambda_\text{EPU80}</math>', units='mm', deps=[], obs=[], ),
  Parameter(name='SI insertion device EPU80 number of periods', group='GIA', value=Prms.si_insertion_device_epu80_number_of_periods, symbol=r'<math>N_\text{p, EPU80}</math>', units='', deps=[], obs=[], ),
  Parameter(name='SI insertion device EPU80 length', group='GIA', value=Prms.si_insertion_device_epu80_length, symbol=r'<math>L_\text{p, EPU80}</math>', units='cm', deps=[], obs=[], ),  
  Parameter(
    name='SI insertion device EPU80 minimum gap',
    group='GIA',
    value=Prms.si_insertion_device_epu80_minimum_gap,
    symbol=r'<math>G_\text{min, EPU80}</math>',
    units='mm',
    deps=[],
    obs=[],
  ),              
  Parameter(
    name='SI insertion device EPU80 maximum horizontal field',
    group='GIA',
    value=Prms.si_insertion_device_epu80_maximum_horizontal_field,
    symbol=r'<math>B_\text{x, EPU80}</math>',
    units='T',
    deps=[],
    obs=[],
  ),
                  
  Parameter(
    name='SI insertion device EPU80 maximum vertical field',
    group='GIA',
    value=Prms.si_insertion_device_epu80_maximum_vertical_field,
    symbol=r'<math>B_\text{y, EPU80}</math>',
    units='T',
    deps=[],
    obs=[],
  ),
    
  Parameter(
    name='SI insertion device EPU80 maximum horizontal deflection parameter',
    group='GIA',
    value=Prms.si_insertion_device_epu80_maximum_horizontal_deflection_parameter,
    symbol=r'<math>K_\text{x, EPU80}</math>',
    units='',
    deps=['SI insertion device EPU80 period length', 'SI insertion device EPU80 maximum vertical field'],
    obs=[r'<math>K_\text{x, EPU80} = \frac{ec B_\text{y,EPU80} \lambda_\text{p, EPU80}}{2 \pi E_0}</math>'],
  ),
                  
  Parameter(
    name='SI insertion device EPU80 maximum vertical deflection parameter',
    group='GIA',
    value=Prms.si_insertion_device_epu80_maximum_vertical_deflection_parameter,
    symbol=r'<math>K_\text{y, EPU80}</math>',
    units='',
    deps=['SI insertion device EPU80 period length', 'SI insertion device EPU80 maximum horizontal field'],
    obs=[r'<math>K_\text{y, EPU80} = \frac{ec B_\text{x,EPU80} \lambda_\text{p, EPU80}}{2 \pi E_0}</math>'],
  ),
    
  Parameter(
    name='SI insertion device EPU80 maximum power',
    group='GIA',
    value=Prms.si_insertion_device_epu80_maximum_power,
    symbol=r'<math>P_\text{EPU80}</math>',
    units='kW',
    deps=['SI beam energy', 'SI beam current', 'SI insertion device EPU80 period length', 'SI insertion device EPU80 number of periods', 'SI insertion device EPU80 maximum horizontal deflection parameter'],
    obs=[r'<math>P_\text{EPU80} = \frac{4 \pi^2 r_e}{3 e E_0} \frac{E^2 K^2_\text{x,EPU80} N_\text{p, EPU80} I}{\lambda_\text{p, EPU80}}</math>'],
  ), 
        
  Parameter(
    name='SI insertion device IVU25 name',
    group='GIA',
    value=Prms.si_insertion_device_ivu25_name,
    symbol=r'',
    units='',
    deps=[],
    obs=[],
  ),
                  
  Parameter(
    name='SI insertion device IVU25 type',
    group='GIA',
    value=Prms.si_insertion_device_ivu25_type,
    symbol=r'',
    units='',
    deps=[],
    obs=[],
  ),
                  
  Parameter(
    name='SI insertion device IVU25 period length',
    group='GIA',
    value=Prms.si_insertion_device_ivu25_period,
    symbol=r'<math>\lambda_\text{IVU25}</math>',
    units='mm',
    deps=[],
    obs=[],
  ),
                  
  Parameter(
    name='SI insertion device IVU25 number of periods',
    group='GIA',
    value=Prms.si_insertion_device_ivu25_number_of_periods,
    symbol=r'<math>N_\text{p, IVU25}</math>',
    units='',
    deps=[],
    obs=[],
  ),
                  
  Parameter(
    name='SI insertion device IVU25 length',
    group='GIA',
    value=Prms.si_insertion_device_ivu25_length,
    symbol=r'<math>L_\text{p, IVU25}</math>',
    units='cm',
    deps=[],
    obs=[],
  ),  
  
  Parameter(
    name='SI insertion device IVU25 minimum gap',
    group='GIA',
    value=Prms.si_insertion_device_ivu25_minimum_gap,
    symbol=r'<math>G_\text{min, IVU25}</math>',
    units='mm',
    deps=[],
    obs=[],
  ),              
       
  Parameter(
    name='SI insertion device IVU25 maximum horizontal field',
    group='GIA',
    value=Prms.si_insertion_device_ivu25_maximum_horizontal_field,
    symbol=r'<math>B_\text{x, IVU25}</math>',
    units='T',
    deps=[],
    obs=[],
  ),
                  
  Parameter(
    name='SI insertion device IVU25 maximum vertical field',
    group='GIA',
    value=Prms.si_insertion_device_ivu25_maximum_vertical_field,
    symbol=r'<math>B_\text{y, IVU25}</math>',
    units='T',
    deps=[],
    obs=[],
  ),
    
  Parameter(
    name='SI insertion device IVU25 maximum horizontal deflection parameter',
    group='GIA',
    value=Prms.si_insertion_device_ivu25_maximum_horizontal_deflection_parameter,
    symbol=r'<math>K_\text{x, IVU25}</math>',
    units='',
    deps=['SI insertion device IVU25 period length', 'SI insertion device IVU25 maximum vertical field'],
    obs=[r'<math>K_\text{x, IVU25} = \frac{ec B_\text{y,IVU25} \lambda_\text{p, IVU25}}{2 \pi E_0}</math>'],
  ),
                  
  Parameter(
    name='SI insertion device IVU25 maximum vertical deflection parameter',
    group='GIA',
    value=Prms.si_insertion_device_ivu25_maximum_vertical_deflection_parameter,
    symbol=r'<math>K_\text{y, IVU25}</math>',
    units='',
    deps=['SI insertion device IVU25 period length', 'SI insertion device IVU25 maximum horizontal field'],
    obs=[r'<math>K_\text{y, IVU25} = \frac{ec B_\text{x,IVU25} \lambda_\text{p, IVU25}}{2 \pi E_0}</math>'],
  ),
    
  Parameter(
    name='SI insertion device IVU25 maximum power',
    group='GIA',
    value=Prms.si_insertion_device_ivu25_maximum_power,
    symbol=r'<math>P_\text{IVU25}</math>',
    units='kW',
    deps=['SI beam energy', 'SI beam current', 'SI insertion device IVU25 period length', 'SI insertion device IVU25 number of periods', 'SI insertion device IVU25 maximum horizontal deflection parameter'],
    obs=[r'<math>P_\text{IVU25} = \frac{4 \pi^2 r_e}{3 e E_0} \frac{E^2 K^2_\text{x,IVU25} N_\text{p, IVU25} I}{\lambda_\text{p, IVU25}}</math>'],
  ), 
                  
  Parameter(
    name='SI insertion device IVU19 name',
    group='GIA',
    value=Prms.si_insertion_device_ivu19_name,
    symbol=r'',
    units='',
    deps=[],
    obs=[],
  ),
                  
  Parameter(
    name='SI insertion device IVU19 type',
    group='GIA',
    value=Prms.si_insertion_device_ivu19_type,
    symbol=r'',
    units='',
    deps=[],
    obs=[],
  ),
                  
  Parameter(
    name='SI insertion device IVU19 period length',
    group='GIA',
    value=Prms.si_insertion_device_ivu19_period,
    symbol=r'<math>\lambda_\text{IVU19}</math>',
    units='mm',
    deps=[],
    obs=[],
  ),
                  
  Parameter(
    name='SI insertion device IVU19 number of periods',
    group='GIA',
    value=Prms.si_insertion_device_ivu19_number_of_periods,
    symbol=r'<math>N_\text{p, IVU19}</math>',
    units='',
    deps=[],
    obs=[],
  ),
                  
  Parameter(
    name='SI insertion device IVU19 length',
    group='GIA',
    value=Prms.si_insertion_device_ivu19_length,
    symbol=r'<math>L_\text{p, IVU19}</math>',
    units='cm',
    deps=[],
    obs=[],
  ),  
  
  Parameter(
    name='SI insertion device IVU19 minimum gap',
    group='GIA',
    value=Prms.si_insertion_device_ivu19_minimum_gap,
    symbol=r'<math>G_\text{min, IVU19}</math>',
    units='mm',
    deps=[],
    obs=[],
  ),              
       
  Parameter(
    name='SI insertion device IVU19 maximum horizontal field',
    group='GIA',
    value=Prms.si_insertion_device_ivu19_maximum_horizontal_field,
    symbol=r'<math>B_\text{x, IVU19}</math>',
    units='T',
    deps=[],
    obs=[],
  ),
                  
  Parameter(
    name='SI insertion device IVU19 maximum vertical field',
    group='GIA',
    value=Prms.si_insertion_device_ivu19_maximum_vertical_field,
    symbol=r'<math>B_\text{y, IVU19}</math>',
    units='T',
    deps=[],
    obs=[],
  ),
    
  Parameter(
    name='SI insertion device IVU19 maximum horizontal deflection parameter',
    group='GIA',
    value=Prms.si_insertion_device_ivu19_maximum_horizontal_deflection_parameter,
    symbol=r'<math>K_\text{x, IVU19}</math>',
    units='',
    deps=['SI insertion device IVU19 period length', 'SI insertion device IVU19 maximum vertical field'],
    obs=[r'<math>K_\text{x, IVU19} = \frac{ec B_\text{y,IVU19} \lambda_\text{p, IVU19}}{2 \pi E_0}</math>'],
  ),
                  
  Parameter(
    name='SI insertion device IVU19 maximum vertical deflection parameter',
    group='GIA',
    value=Prms.si_insertion_device_ivu19_maximum_vertical_deflection_parameter,
    symbol=r'<math>K_\text{y, IVU19}</math>',
    units='',
    deps=['SI insertion device IVU19 period length', 'SI insertion device IVU19 maximum horizontal field'],
    obs=[r'<math>K_\text{y, IVU19} = \frac{ec B_\text{x,IVU19} \lambda_\text{p, IVU19}}{2 \pi E_0}</math>'],
  ),
    
  Parameter(
    name='SI insertion device IVU19 maximum power',
    group='GIA',
    value=Prms.si_insertion_device_ivu19_maximum_power,
    symbol=r'<math>P_\text{IVU19}</math>',
    units='kW',
    deps=['SI beam energy', 'SI beam current', 'SI insertion device IVU19 period length', 'SI insertion device IVU19 number of periods', 'SI insertion device IVU19 maximum horizontal deflection parameter'],
    obs=[r'<math>P_\text{IVU19} = \frac{4 \pi^2 r_e}{3 e E_0} \frac{E^2 K^2_\text{x,IVU19} N_\text{p, IVU19} I}{\lambda_\text{p, IVU19}}</math>'],
  ),    
                  
  
           
  Parameter(
    name='SI dipoles alignment error tolerance',
    group='FAC',
    value=Prms.si_dipoles_alignment_error_tolerance,
    symbol=r'<math>E_{xy,\text{dip}}</math>',
    units=unicode('μm', encoding='utf-8'),
    deps=[],
    obs=[r'Random transverse position error (standard deviation) for <math>x</math> and <math>y</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),

  Parameter(
    name='SI quadrupoles alignment error tolerance',
    group='FAC',
    value=Prms.si_quadrupoles_alignment_error_tolerance,
    symbol=r'<math>E_{xy,\text{QUAD}}</math>',
    units=unicode('μm', encoding='utf-8'),
    deps=[],
    obs=[r'Random transverse position error (standard deviation) for <math>x</math> and <math>y</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),

  Parameter(
    name='SI sextupoles alignment error tolerance',
    group='FAC',
    value=Prms.si_sextupoles_alignment_error_tolerance,
    symbol=r'<math>E_{xy,\text{SEXT}}</math>',
    units=unicode('μm', encoding='utf-8'),
    deps=[],
    obs=[r'Random transverse position error (standard deviation) for <math>x</math> and <math>y</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),

  Parameter(
    name='SI dipoles rotation error tolerance',
    group='FAC',
    value=Prms.si_dipoles_rotation_error_tolerance,
    symbol=r'<math>E_{\theta,\text{dip}}</math>',
    units='mrad',
    deps=[],
    obs=[r'Random rotation error (standard deviation) around longitudinal axis.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),

  Parameter(
    name='SI quadrupoles rotation error tolerance',
    group='FAC',
    value=Prms.si_quadrupoles_rotation_error_tolerance,
    symbol=r'<math>E_{\theta,\text{QUAD}}</math>',
    units='mrad',
    deps=[],
    obs=[r'Random rotation error (standard deviation) around longitudinal axis.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),

  Parameter(
    name='SI sextupoles rotation error tolerance',
    group='FAC',
    value=Prms.si_sextupoles_rotation_error_tolerance,
    symbol=r'<math>E_{\theta,\text{SEXT}}</math>',
    units='mrad',
    deps=[],
    obs=[r'Random rotation error (standard deviation) around longitudinal axis.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),

  Parameter(
    name='SI dipoles excitation error tolerance',
    group='FAC',
    value=Prms.si_dipoles_excitation_error_tolerance,
    symbol=r'<math>E_{\text{exc,dip}}</math>',
    units='%',
    deps=[],
    obs=[r'Static or low frequency random excitation error (standard deviation).',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),

  Parameter(
    name='SI quadrupoles excitation error tolerance',
    group='FAC',
    value=Prms.si_quadrupoles_excitation_error_tolerance,
    symbol=r'<math>E_{\text{exc,QUAD}}</math>',
    units='%',
    deps=[],
    obs=[r'Static or low frequency random excitation error (standard deviation).',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),

  Parameter(
    name='SI sextupoles excitation error tolerance',
    group='FAC',
    value=Prms.si_sextupoles_excitation_error_tolerance,
    symbol=r'<math>E_{\text{exc,SEXT}}</math>',
    units='%',
    deps=[],
    obs=[r'Static or low frequency random excitation error (standard deviation).',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI reference position for multipole contribution for dipoles',
    group='FAC',
    value=Prms.si_reference_position_for_multipole_contribution_for_dipoles,
    symbol=r'<math>r_{0,\text{dip}}</math>',
    units='mm',
    deps=[],
    obs=[],
  ),
               
  Parameter(
    name='SI systematic normal 6-pole error tolerance for dipoles',
    group='FAC',
    value=Prms.si_systematic_normal_6_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_2/B_0,dip}^{\text{sys,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI systematic normal 8-pole error tolerance for dipoles',
    group='FAC',
    value=Prms.si_systematic_normal_8_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_3/B_0,dip}^{\text{sys,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                                    
  Parameter(
    name='SI systematic normal 10-pole error tolerance for dipoles',
    group='FAC',
    value=Prms.si_systematic_normal_10_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_4/B_0,dip}^{\text{sys,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
   
  Parameter(
    name='SI systematic normal 12-pole error tolerance for dipoles',
    group='FAC',
    value=Prms.si_systematic_normal_12_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_5/B_0,dip}^{\text{sys,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
            
  Parameter(
    name='SI systematic normal 14-pole error tolerance for dipoles',
    group='FAC',
    value=Prms.si_systematic_normal_14_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_6/B_0,dip}^{\text{sys,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random normal 6-pole error tolerance for dipoles',
    group='FAC',
    value=Prms.si_random_normal_6_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_2/B_0,dip}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random normal 8-pole error tolerance for dipoles',
    group='FAC',
    value=Prms.si_random_normal_8_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_3/B_0,dip}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                                    
  Parameter(
    name='SI random normal 10-pole error tolerance for dipoles',
    group='FAC',
    value=Prms.si_random_normal_10_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_4/B_0,dip}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
   
  Parameter(
    name='SI random normal 12-pole error tolerance for dipoles',
    group='FAC',
    value=Prms.si_random_normal_12_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_5/B_0,dip}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
            
  Parameter(
    name='SI random normal 14-pole error tolerance for dipoles',
    group='FAC',
    value=Prms.si_random_normal_14_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_6/B_0,dip}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random normal 16-pole error tolerance for dipoles',
    group='FAC',
    value=Prms.si_random_normal_16_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_7/B_0,dip}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                                 
  Parameter(
    name='SI random normal 18-pole error tolerance for dipoles',
    group='FAC',
    value=Prms.si_random_normal_18_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_8/B_0,dip}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random skew 6-pole error tolerance for dipoles',
    group='FAC',
    value=Prms.si_random_skew_6_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_2/B_0,dip}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random skew 8-pole error tolerance for dipoles',
    group='FAC',
    value=Prms.si_random_skew_8_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_3/B_0,dip}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                                    
  Parameter(
    name='SI random skew 10-pole error tolerance for dipoles',
    group='FAC',
    value=Prms.si_random_skew_10_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_4/B_0,dip}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
   
  Parameter(
    name='SI random skew 12-pole error tolerance for dipoles',
    group='FAC',
    value=Prms.si_random_skew_12_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_5/B_0,dip}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
            
  Parameter(
    name='SI random skew 14-pole error tolerance for dipoles',
    group='FAC',
    value=Prms.si_random_skew_14_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_6/B_0,dip}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random skew 16-pole error tolerance for dipoles',
    group='FAC',
    value=Prms.si_random_skew_16_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_7/B_0,dip}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                                 
  Parameter(
    name='SI random skew 18-pole error tolerance for dipoles',
    group='FAC',
    value=Prms.si_random_skew_18_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_8/B_0,dip}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
        
  Parameter(
    name='SI reference position for multipole contribution for quadrupoles',
    group='FAC',
    value=Prms.si_reference_position_for_multipole_contribution_for_quadrupoles,
    symbol=r'<math>r_{0,\text{QUAD}}</math>',
    units='mm',
    deps=[],
    obs=[],
  ),
                       
  Parameter(
    name='SI systematic normal 8-pole error tolerance for quadrupoles',
    group='FAC',
    value=Prms.si_systematic_normal_8_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_3/B_0,QUAD}^{\text{sys,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI systematic normal 12-pole error tolerance for quadrupoles',
    group='FAC',
    value=Prms.si_systematic_normal_12_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_5/B_0,QUAD}^{\text{sys,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),              
                  
  Parameter(
    name='SI systematic normal 20-pole error tolerance for quadrupoles',
    group='FAC',
    value=Prms.si_systematic_normal_20_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_9/B_0,QUAD}^{\text{sys,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
               
  Parameter(
    name='SI random normal 6-pole error tolerance for quadrupoles',
    group='FAC',
    value=Prms.si_random_normal_6_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_2/B_0,QUAD}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random normal 8-pole error tolerance for quadrupoles',
    group='FAC',
    value=Prms.si_random_normal_8_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_3/B_0,QUAD}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                                    
  Parameter(
    name='SI random normal 10-pole error tolerance for quadrupoles',
    group='FAC',
    value=Prms.si_random_normal_10_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_4/B_0,QUAD}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
   
  Parameter(
    name='SI random normal 12-pole error tolerance for quadrupoles',
    group='FAC',
    value=Prms.si_random_normal_12_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_5/B_0,QUAD}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
            
  Parameter(
    name='SI random normal 14-pole error tolerance for quadrupoles',
    group='FAC',
    value=Prms.si_random_normal_14_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_6/B_0,QUAD}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random normal 16-pole error tolerance for quadrupoles',
    group='FAC',
    value=Prms.si_random_normal_16_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_7/B_0,QUAD}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                                 
  Parameter(
    name='SI random normal 18-pole error tolerance for quadrupoles',
    group='FAC',
    value=Prms.si_random_normal_18_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_8/B_0,QUAD}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random normal 20-pole error tolerance for quadrupoles',
    group='FAC',
    value=Prms.si_random_normal_20_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_9/B_0,QUAD}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random skew 6-pole error tolerance for quadrupoles',
    group='FAC',
    value=Prms.si_random_skew_6_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_2/B_0,QUAD}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random skew 8-pole error tolerance for quadrupoles',
    group='FAC',
    value=Prms.si_random_skew_8_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_3/B_0,QUAD}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                                    
  Parameter(
    name='SI random skew 10-pole error tolerance for quadrupoles',
    group='FAC',
    value=Prms.si_random_skew_10_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_4/B_0,QUAD}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
   
  Parameter(
    name='SI random skew 12-pole error tolerance for quadrupoles',
    group='FAC',
    value=Prms.si_random_skew_12_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_5/B_0,QUAD}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
            
  Parameter(
    name='SI random skew 14-pole error tolerance for quadrupoles',
    group='FAC',
    value=Prms.si_random_skew_14_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_6/B_0,QUAD}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random skew 16-pole error tolerance for quadrupoles',
    group='FAC',
    value=Prms.si_random_skew_16_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_7/B_0,QUAD}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                                 
  Parameter(
    name='SI random skew 18-pole error tolerance for quadrupoles',
    group='FAC',
    value=Prms.si_random_skew_18_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_8/B_0,QUAD}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random skew 20-pole error tolerance for quadrupoles',
    group='FAC',
    value=Prms.si_random_skew_20_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_9/B_0,QUAD}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),               
                                                          
  Parameter(
    name='SI reference position for multipole contribution for sextupoles',
    group='FAC',
    value=Prms.si_reference_position_for_multipole_contribution_for_sextupoles,
    symbol=r'<math>r_{0,\text{SEXT}}</math>',
    units='mm',
    deps=[],
    obs=[],
  ), 
                  
  Parameter(
    name='SI systematic normal 18-pole error tolerance for sextupoles',
    group='FAC',
    value=Prms.si_systematic_normal_18_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_8/B_0,SEXT}^{\text{sys,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
        
  Parameter(
    name='SI systematic normal 30-pole error tolerance for sextupoles',
    group='FAC',
    value=Prms.si_systematic_normal_30_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_14/B_0,SEXT}^{\text{sys,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),  
                  
  Parameter(
    name='SI random normal 8-pole error tolerance for sextupoles',
    group='FAC',
    value=Prms.si_random_normal_8_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_3/B_0,SEXT}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ), 
                  
  Parameter(
    name='SI random normal 10-pole error tolerance for sextupoles',
    group='FAC',
    value=Prms.si_random_normal_10_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_4/B_0,SEXT}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random normal 12-pole error tolerance for sextupoles',
    group='FAC',
    value=Prms.si_random_normal_12_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_5/B_0,SEXT}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ), 
   
  Parameter(
    name='SI random normal 14-pole error tolerance for sextupoles',
    group='FAC',
    value=Prms.si_random_normal_14_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_6/B_0,SEXT}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random normal 16-pole error tolerance for sextupoles',
    group='FAC',
    value=Prms.si_random_normal_16_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_7/B_0,SEXT}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random normal 18-pole error tolerance for sextupoles',
    group='FAC',
    value=Prms.si_random_normal_18_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_8/B_0,SEXT}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random normal 20-pole error tolerance for sextupoles',
    group='FAC',
    value=Prms.si_random_normal_20_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_9/B_0,SEXT}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
        
  Parameter(
    name='SI random normal 22-pole error tolerance for sextupoles',
    group='FAC',
    value=Prms.si_random_normal_22_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_9/B_0,SEXT}^{\text{rnd,normal}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
  
  Parameter(
    name='SI random skew 8-pole error tolerance for sextupoles',
    group='FAC',
    value=Prms.si_random_skew_8_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_3/B_0,SEXT}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ), 
                  
  Parameter(
    name='SI random skew 10-pole error tolerance for sextupoles',
    group='FAC',
    value=Prms.si_random_skew_10_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_4/B_0,SEXT}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random skew 12-pole error tolerance for sextupoles',
    group='FAC',
    value=Prms.si_random_skew_12_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_5/B_0,SEXT}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ), 
   
  Parameter(
    name='SI random skew 14-pole error tolerance for sextupoles',
    group='FAC',
    value=Prms.si_random_skew_14_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_6/B_0,SEXT}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random skew 16-pole error tolerance for sextupoles',
    group='FAC',
    value=Prms.si_random_skew_16_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_7/B_0,SEXT}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random skew 18-pole error tolerance for sextupoles',
    group='FAC',
    value=Prms.si_random_skew_18_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_8/B_0,SEXT}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
                  
  Parameter(
    name='SI random skew 20-pole error tolerance for sextupoles',
    group='FAC',
    value=Prms.si_random_skew_20_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_9/B_0,SEXT}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
        
  Parameter(
    name='SI random skew 22-pole error tolerance for sextupoles',
    group='FAC',
    value=Prms.si_random_skew_22_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_9/B_0,SEXT}^{\text{rnd,skew}}</math>',
    units='',
    deps=['SI reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8')],
  ),
  
'''                                    
   
  
