
  Parameter(
    name='Booster reference position for multipole contribution for dipoles',
    group='FAC', is_derived=True,
    value=Prms.bo_reference_position_for_multipole_contribution_for_dipoles,
    symbol=r'<math>r_{0,\text{DIP}}</math>',
    units='mm',
    deps=[],
    obs=[],
  ),

  Parameter(
    name='Booster systematic normal 8-pole error tolerance for dipoles',
    group='FAC', is_derived=True, is_derived=True,
    value=Prms.bo_systematic_normal_8_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_3/B_0,DIP}^{\text{sys,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                'From approved model1 of 2013-05-07'],
  ),

  Parameter(
    name='Booster systematic normal 10-pole error tolerance for dipoles',
    group='FAC', is_derived=True,
    value=Prms.bo_systematic_normal_10_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_4/B_0,DIP}^{\text{sys,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                'From approved model1 of 2013-05-07'],
  ),

  Parameter(
    name='Booster systematic normal 12-pole error tolerance for dipoles',
    group='FAC', is_derived=True,
    value=Prms.bo_systematic_normal_12_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_5/B_0,DIP}^{\text{sys,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                'From approved model1 of 2013-05-07'],
  ),

   Parameter(
    name='Booster systematic normal 14-pole error tolerance for dipoles',
    group='FAC', is_derived=True,
    value=Prms.bo_systematic_normal_14_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_6/B_0,DIP}^{\text{sys,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                'From approved model1 of 2013-05-07'],
  ),

  Parameter(
    name='Booster random normal 6-pole error tolerance for dipoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_6_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_2/B_0,DIP}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model1 of 2013-05-07'],
  ),

  Parameter(
    name='Booster random normal 8-pole error tolerance for dipoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_8_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_3/B_0,DIP}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model1 of 2013-05-07'],
  ),

  Parameter(
    name='Booster random normal 10-pole error tolerance for dipoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_10_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_4/B_0,DIP}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model1 of 2013-05-07'],
  ),

  Parameter(
    name='Booster random normal 12-pole error tolerance for dipoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_12_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_5/B_0,DIP}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model1 of 2013-05-07'],
  ),

  Parameter(
    name='Booster random normal 14-pole error tolerance for dipoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_14_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_6/B_0,DIP}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model1 of 2013-05-07'],
  ),

  Parameter(
    name='Booster random normal 16-pole error tolerance for dipoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_16_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_7/B_0,DIP}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model1 of 2013-05-07'],
  ),

  Parameter(
    name='Booster random normal 18-pole error tolerance for dipoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_18_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_8/B_0,DIP}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model1 of 2013-05-07'],
  ),


  Parameter(
    name='Booster random skew 6-pole error tolerance for dipoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_6_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_2/B_0,DIP}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model1 of 2013-05-07'],
  ),

  Parameter(
    name='Booster random skew 8-pole error tolerance for dipoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_8_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_3/B_0,DIP}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model1 of 2013-05-07'],
  ),

  Parameter(
    name='Booster random skew 10-pole error tolerance for dipoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_10_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_4/B_0,DIP}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model1 of 2013-05-07'],
  ),

  Parameter(
    name='Booster random skew 12-pole error tolerance for dipoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_12_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_5/B_0,DIP}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model1 of 2013-05-07'],
  ),

  Parameter(
    name='Booster random skew 14-pole error tolerance for dipoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_14_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_6/B_0,DIP}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model1 of 2013-05-07'],
  ),

  Parameter(
    name='Booster random skew 16-pole error tolerance for dipoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_16_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_7/B_0,DIP}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model1 of 2013-05-07'],
  ),

  Parameter(
    name='Booster random skew 18-pole error tolerance for dipoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_18_pole_error_tolerance_for_dipoles,
    symbol=r'<math>M_{B_8/B_0,DIP}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for dipoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model1 of 2013-05-07'],
  ),

  Parameter(
    name='Booster reference position for multipole contribution for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_reference_position_for_multipole_contribution_for_quadrupoles,
    symbol=r'<math>r_{0,\text{QUAD}}</math>',
    units='mm',
    deps=[],
    obs=[],
  ),

  Parameter(
    name='Booster systematic normal 12-pole error tolerance for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_systematic_normal_12_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_5/B_1,QUAD}^{\text{sys,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',],
  ),

  Parameter(
    name='Booster systematic normal 20-pole error tolerance for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_systematic_normal_20_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_9/B_1,QUAD}^{\text{sys,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.'],
  ),

  Parameter(
    name='Booster systematic normal 28-pole error tolerance for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_systematic_normal_28_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_{13}/B_1,QUAD}^{\text{sys,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.'],
  ),

  Parameter(
    name='Booster random normal 6-pole error tolerance for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_6_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_2/B_1,QUAD}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'Rotating coil measurement of QF prototype magnets'],
  ),

  Parameter(
    name='Booster random normal 8-pole error tolerance for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_8_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_3/B_1,QUAD}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'Rotating coil measurement of QF prototype magnets'],
  ),

  Parameter(
    name='Booster random normal 10-pole error tolerance for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_10_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_4/B_1,QUAD}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'Rotating coil measurement of QF prototype magnets'],
  ),

  Parameter(
    name='Booster random normal 12-pole error tolerance for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_12_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_5/B_1,QUAD}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'Rotating coil measurement of QF prototype magnets'],
  ),

  Parameter(
    name='Booster random normal 14-pole error tolerance for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_14_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_6/B_1,QUAD}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'Rotating coil measurement of QF prototype magnets'],
  ),

  Parameter(
    name='Booster random normal 16-pole error tolerance for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_16_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_7/B_1,QUAD}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'Rotating coil measurement of QF prototype magnets'],
  ),

  Parameter(
    name='Booster random normal 18-pole error tolerance for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_18_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_8/B_1,QUAD}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'Rotating coil measurement of QF prototype magnets'],
  ),

  Parameter(
    name='Booster random normal 20-pole error tolerance for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_20_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_9/B_1,QUAD}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'Rotating coil measurement of QF prototype magnets'],
  ),

  Parameter(
    name='Booster random skew 6-pole error tolerance for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_6_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_2/B_1,QUAD}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'Rotating coil measurement of QF prototype magnets'],
  ),

  Parameter(
    name='Booster random skew 8-pole error tolerance for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_8_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_3/B_1,QUAD}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'Rotating coil measurement of QF prototype magnets'],
  ),

  Parameter(
    name='Booster random skew 10-pole error tolerance for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_10_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_4/B_1,QUAD}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'Rotating coil measurement of QF prototype magnets'],
  ),

  Parameter(
    name='Booster random skew 12-pole error tolerance for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_12_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_5/B_1,QUAD}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'Rotating coil measurement of QF prototype magnets'],
  ),

  Parameter(
    name='Booster random skew 14-pole error tolerance for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_14_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_6/B_1,QUAD}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'Rotating coil measurement of QF prototype magnets'],
  ),

  Parameter(
    name='Booster random skew 16-pole error tolerance for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_16_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_7/B_1,QUAD}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'Rotating coil measurement of QF prototype magnets'],
  ),

  Parameter(
    name='Booster random skew 18-pole error tolerance for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_18_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_8/B_1,QUAD}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'Rotating coil measurement of QF prototype magnets'],
  ),

  Parameter(
    name='Booster random skew 20-pole error tolerance for quadrupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_20_pole_error_tolerance_for_quadrupoles,
    symbol=r'<math>M_{B_9/B_1,QUAD}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for quadrupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'Rotating coil measurement of QF prototype magnets'],
  ),

  Parameter(
    name='Booster reference position for multipole contribution for sextupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_reference_position_for_multipole_contribution_for_sextupoles,
    symbol=r'<math>r_{0,\text{SEXT}}</math>',
    units='mm',
    deps=[],
    obs=[],
  ),

  Parameter(
    name='Booster systematic normal 18-pole error tolerance for sextupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_systematic_normal_18_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_8/B_2,SEXT}^{\text{sys,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                'From approved model3 of 2013-06-05'],
  ),

  Parameter(
    name='Booster systematic normal 30-pole error tolerance for sextupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_systematic_normal_30_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_{14}/B_2,SEXT}^{\text{sys,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                'From approved model3 of 2013-06-05'],
  ),

  Parameter(
    name='Booster random normal 8-pole error tolerance for sextupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_8_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_3/B_2,SEXT}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model3 of 2013-06-05'],
  ),

  Parameter(
    name='Booster random normal 10-pole error tolerance for sextupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_10_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_4/B_2,SEXT}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model3 of 2013-06-05'],
  ),

  Parameter(
    name='Booster random normal 12-pole error tolerance for sextupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_12_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_5/B_2,SEXT}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model3 of 2013-06-05'],
  ),

  Parameter(
    name='Booster random normal 14-pole error tolerance for sextupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_14_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_6/B_2,SEXT}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model3 of 2013-06-05'],
  ),

  Parameter(
    name='Booster random normal 16-pole error tolerance for sextupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_16_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_7/B_2,SEXT}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model3 of 2013-06-05'],
  ),

  Parameter(
    name='Booster random normal 18-pole error tolerance for sextupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_18_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_8/B_2,SEXT}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model3 of 2013-06-05'],
  ),

  Parameter(
    name='Booster random normal 20-pole error tolerance for sextupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_normal_20_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_9/B_2,SEXT}^{\text{rnd,normal}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model3 of 2013-06-05'],
  ),

  Parameter(
    name='Booster random skew 8-pole error tolerance for sextupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_8_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_3/B_2,SEXT}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model3 of 2013-06-05'],
  ),

  Parameter(
    name='Booster random skew 10-pole error tolerance for sextupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_10_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_4/B_2,SEXT}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model3 of 2013-06-05'],
  ),

  Parameter(
    name='Booster random skew 12-pole error tolerance for sextupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_12_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_5/B_2,SEXT}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model3 of 2013-06-05'],
  ),

  Parameter(
    name='Booster random skew 14-pole error tolerance for sextupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_14_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_6/B_2,SEXT}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model3 of 2013-06-05'],
  ),

  Parameter(
    name='Booster random skew 16-pole error tolerance for sextupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_16_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_7/B_2,SEXT}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model3 of 2013-06-05'],
  ),

  Parameter(
    name='Booster random skew 18-pole error tolerance for sextupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_18_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_8/B_2,SEXT}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model3 of 2013-06-05'],
  ),

  Parameter(
    name='Booster random skew 20-pole error tolerance for sextupoles',
    group='FAC', is_derived=True,
    value=Prms.bo_random_skew_20_pole_error_tolerance_for_sextupoles,
    symbol=r'<math>M_{B_9/B_2,SEXT}^{\text{rnd,skew}}</math>',
    units='',
    deps=['Booster reference position for multipole contribution for sextupoles'],
    obs=[r'Relative value, calculated at <math>r_0</math>.',
                unicode('Simulations assume Gaussian distribution truncated at ±2σ.', encoding='utf-8'),
                'From approved model3 of 2013-06-05'],
  ),
